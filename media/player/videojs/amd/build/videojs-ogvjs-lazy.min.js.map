{"version":3,"file":"videojs-ogvjs-lazy.min.js","sources":["../src/videojs-ogvjs-lazy.js"],"sourcesContent":["/**\n * videojs-ogvjs\n * @version 0.1.2\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\n * @license MIT\n */\n/*! @name videojs-ogvjs @version 0.1.2 @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('video.js'), require('OGVCompat'), require('OGVLoader'), require('OGVPlayer')) :\n\ttypeof define === 'function' && define.amd ? define(['media_videojs/video-lazy', './local/ogv/ogv'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojsOgvjs = factory(global.videojs, global.OGVCompat, global.OGVLoader, global.OGVPlayer));\n}(this, (function (videojs, ogvBase) { 'use strict';\n\n\tfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n\tvar videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);\n\tvar OGVCompat__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVCompat);\n\tvar OGVLoader__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVLoader);\n\tvar OGVPlayer__default = /*#__PURE__*/_interopDefaultLegacy(ogvBase.OGVPlayer);\n\n\tfunction createCommonjsModule(fn, basedir, module) {\n\t\treturn module = {\n\t\t  path: basedir,\n\t\t  exports: {},\n\t\t  require: function (path, base) {\n\t      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t    }\n\t\t}, fn(module, module.exports), module.exports;\n\t}\n\n\tfunction commonjsRequire () {\n\t\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n\t}\n\n\tvar setPrototypeOf = createCommonjsModule(function (module) {\n\t  function _setPrototypeOf(o, p) {\n\t    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n\t      o.__proto__ = p;\n\t      return o;\n\t    };\n\n\t    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t    return _setPrototypeOf(o, p);\n\t  }\n\n\t  module.exports = _setPrototypeOf;\n\t  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t});\n\n\tvar inheritsLoose = createCommonjsModule(function (module) {\n\t  function _inheritsLoose(subClass, superClass) {\n\t    subClass.prototype = Object.create(superClass.prototype);\n\t    subClass.prototype.constructor = subClass;\n\t    setPrototypeOf(subClass, superClass);\n\t  }\n\n\t  module.exports = _inheritsLoose;\n\t  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n\t});\n\n\tvar Tech = videojs__default['default'].getComponent('Tech');\n\tvar androidOS = 'Android';\n\tvar iPhoneOS = 'iPhoneOS';\n\tvar iPadOS = 'iPadOS';\n\tvar otherOS = 'Other';\n\t/**\n\t * Object.defineProperty but \"lazy\", which means that the value is only set after\n\t * it retrieved the first time, rather than being set right away.\n\t *\n\t * @param {Object} obj the object to set the property on.\n\t * @param {string} key the key for the property to set.\n\t * @param {Function} getValue the function used to get the value when it is needed.\n\t * @param {boolean} setter whether a setter should be allowed or not.\n\t */\n\n\tvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n\t  if (setter === void 0) {\n\t    setter = true;\n\t  }\n\n\t  var set = function set(value) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      writable: true\n\t    });\n\t  };\n\n\t  var options = {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function get() {\n\t      var value = getValue();\n\t      set(value);\n\t      return value;\n\t    }\n\t  };\n\n\t  if (setter) {\n\t    options.set = set;\n\t  }\n\n\t  return Object.defineProperty(obj, key, options);\n\t};\n\t/**\n\t * Get the device's OS.\n\t *\n\t * @return {string} Device's OS.\n\t */\n\n\n\tvar getDeviceOS = function getDeviceOS() {\n\t  /* global navigator */\n\t  var ua = navigator.userAgent;\n\n\t  if (/android/i.test(ua)) {\n\t    return androidOS;\n\t  } else if (/iPad|iPhone|iPod/.test(ua)) {\n\t    return iPhoneOS;\n\t  } else if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) {\n\t    return iPadOS;\n\t  }\n\n\t  return otherOS;\n\t};\n\t/**\n\t * OgvJS Media Controller - Wrapper for ogv.js Media API\n\t *\n\t * @mixes Tech~SourceHandlerAdditions\n\t * @extends Tech\n\t */\n\n\n\tvar OgvJS = /*#__PURE__*/function (_Tech) {\n\t  inheritsLoose(OgvJS, _Tech);\n\n\t  /**\n\t   * Create an instance of this Tech.\n\t   *\n\t   * @param {Object} [options] The key/value store of player options.\n\t   * @param {Component~ReadyCallback} ready Callback function to call when the `OgvJS` Tech is ready.\n\t   */\n\t  function OgvJS(options, ready) {\n\t    var _this;\n\n\t    _this = _Tech.call(this, options, ready) || this;\n\t    _this.el_.src = options.source.src;\n\t    OgvJS.setIfAvailable(_this.el_, 'autoplay', options.autoplay);\n\t    OgvJS.setIfAvailable(_this.el_, 'loop', options.loop);\n\t    OgvJS.setIfAvailable(_this.el_, 'poster', options.poster);\n\t    OgvJS.setIfAvailable(_this.el_, 'preload', options.preload);\n\n\t    _this.on('loadedmetadata', function () {\n\t      if (getDeviceOS() === iPhoneOS) {\n\t        // iPhoneOS add some inline styles to the canvas, we need to remove it.\n\t        var canvas = this.el_.getElementsByTagName('canvas')[0];\n\t        canvas.style.removeProperty('width');\n\t        canvas.style.removeProperty('margin');\n\t      }\n\n\t      this.triggerReady();\n\t    });\n\n\t    return _this;\n\t  }\n\t  /**\n\t   * Create the 'OgvJS' Tech's DOM element.\n\t   *\n\t   * @return {Element} The element that gets created.\n\t   */\n\n\n\t  var _proto = OgvJS.prototype;\n\n\t  _proto.createEl = function createEl() {\n\t    var options = this.options_;\n\n\t    if (options.base) {\n\t      OGVLoader__default['default'].base = options.base;\n\t    } else {\n\t      throw new Error('Please specify the base for the ogv.js library');\n\t    }\n\n\t    var el = new OGVPlayer__default['default'](options);\n\t    el.className += ' vjs-tech';\n\t    options.tag = el;\n\t    return el;\n\t  }\n\t  /**\n\t   * Start playback\n\t   *\n\t   * @method play\n\t   */\n\t  ;\n\n\t  _proto.play = function play() {\n\t    this.el_.play();\n\t  }\n\t  /**\n\t   * Get the current playback speed.\n\t   *\n\t   * @return {number}\n\t   * @method playbackRate\n\t   */\n\t  ;\n\n\t  _proto.playbackRate = function playbackRate() {\n\t    return this.el_.playbackRate || 1;\n\t  }\n\t  /**\n\t   * Set the playback speed.\n\t   *\n\t   * @param {number} val Speed for the player to play.\n\t   * @method setPlaybackRate\n\t   */\n\t  ;\n\n\t  _proto.setPlaybackRate = function setPlaybackRate(val) {\n\t    if (this.el_.hasOwnProperty('playbackRate')) {\n\t      this.el_.playbackRate = val;\n\t    }\n\t  }\n\t  /**\n\t   * Returns a TimeRanges object that represents the ranges of the media resource that the user agent has played.\n\t   *\n\t   * @return {TimeRangeObject} the range of points on the media timeline that has been reached through normal playback\n\t   */\n\t  ;\n\n\t  _proto.played = function played() {\n\t    return this.el_.played;\n\t  }\n\t  /**\n\t   * Pause playback\n\t   *\n\t   * @method pause\n\t   */\n\t  ;\n\n\t  _proto.pause = function pause() {\n\t    this.el_.pause();\n\t  }\n\t  /**\n\t   * Is the player paused or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method paused\n\t   */\n\t  ;\n\n\t  _proto.paused = function paused() {\n\t    return this.el_.paused;\n\t  }\n\t  /**\n\t   * Get current playing time.\n\t   *\n\t   * @return {number}\n\t   * @method currentTime\n\t   */\n\t  ;\n\n\t  _proto.currentTime = function currentTime() {\n\t    return this.el_.currentTime;\n\t  }\n\t  /**\n\t   * Set current playing time.\n\t   *\n\t   * @param {number} seconds Current time of audio/video.\n\t   * @method setCurrentTime\n\t   */\n\t  ;\n\n\t  _proto.setCurrentTime = function setCurrentTime(seconds) {\n\t    try {\n\t      this.el_.currentTime = seconds;\n\t    } catch (e) {\n\t      videojs__default['default'].log(e, 'Media is not ready. (Video.JS)');\n\t    }\n\t  }\n\t  /**\n\t   * Get media's duration.\n\t   *\n\t   * @return {number}\n\t   * @method duration\n\t   */\n\t  ;\n\n\t  _proto.duration = function duration() {\n\t    if (this.el_.duration && this.el_.duration !== Infinity) {\n\t      return this.el_.duration;\n\t    }\n\n\t    return 0;\n\t  }\n\t  /**\n\t   * Get a TimeRange object that represents the intersection\n\t   * of the time ranges for which the user agent has all\n\t   * relevant media.\n\t   *\n\t   * @return {TimeRangeObject}\n\t   * @method buffered\n\t   */\n\t  ;\n\n\t  _proto.buffered = function buffered() {\n\t    return this.el_.buffered;\n\t  }\n\t  /**\n\t   * Get current volume level.\n\t   *\n\t   * @return {number}\n\t   * @method volume\n\t   */\n\t  ;\n\n\t  _proto.volume = function volume() {\n\t    return this.el_.hasOwnProperty('volume') ? this.el_.volume : 1;\n\t  }\n\t  /**\n\t   * Set current playing volume level.\n\t   *\n\t   * @param {number} percentAsDecimal Volume percent as a decimal.\n\t   * @method setVolume\n\t   */\n\t  ;\n\n\t  _proto.setVolume = function setVolume(percentAsDecimal) {\n\t    if (getDeviceOS() !== iPhoneOS && this.el_.hasOwnProperty('volume')) {\n\t      this.el_.volume = percentAsDecimal;\n\t    }\n\t  }\n\t  /**\n\t   * Is the player muted or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method muted\n\t   */\n\t  ;\n\n\t  _proto.muted = function muted() {\n\t    return this.el_.muted;\n\t  }\n\t  /**\n\t   * Mute the player.\n\t   *\n\t   * @param {boolean} muted True to mute the player.\n\t   */\n\t  ;\n\n\t  _proto.setMuted = function setMuted(muted) {\n\t    this.el_.muted = !!muted;\n\t  }\n\t  /**\n\t   * Is the player muted by default or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method defaultMuted\n\t   */\n\t  ;\n\n\t  _proto.defaultMuted = function defaultMuted() {\n\t    return this.el_.defaultMuted || false;\n\t  }\n\t  /**\n\t   * Get the player width.\n\t   *\n\t   * @return {number}\n\t   * @method width\n\t   */\n\t  ;\n\n\t  _proto.width = function width() {\n\t    return this.el_.offsetWidth;\n\t  }\n\t  /**\n\t   * Get the player height.\n\t   *\n\t   * @return {number}\n\t   * @method height\n\t   */\n\t  ;\n\n\t  _proto.height = function height() {\n\t    return this.el_.offsetHeight;\n\t  }\n\t  /**\n\t   * Get the video width.\n\t   *\n\t   * @return {number}\n\t   * @method videoWidth\n\t   */\n\t  ;\n\n\t  _proto.videoWidth = function videoWidth() {\n\t    return this.el_.videoWidth;\n\t  }\n\t  /**\n\t   * Get the video height.\n\t   *\n\t   * @return {number}\n\t   * @method videoHeight\n\t   */\n\t  ;\n\n\t  _proto.videoHeight = function videoHeight() {\n\t    return this.el_.videoHeight;\n\t  }\n\t  /**\n\t   * Get/set media source.\n\t   *\n\t   * @param {Object=} src Source object\n\t   * @return {Object}\n\t   * @method src\n\t   */\n\t  ;\n\n\t  _proto.src = function src(_src) {\n\t    if (typeof _src === 'undefined') {\n\t      return this.el_.src;\n\t    }\n\n\t    this.el_.src = _src;\n\t  }\n\t  /**\n\t   * Load the media into the player.\n\t   *\n\t   * @method load\n\t   */\n\t  ;\n\n\t  _proto.load = function load() {\n\t    this.el_.load();\n\t  }\n\t  /**\n\t   * Get current media source.\n\t   *\n\t   * @return {Object}\n\t   * @method currentSrc\n\t   */\n\t  ;\n\n\t  _proto.currentSrc = function currentSrc() {\n\t    if (this.currentSource_) {\n\t      return this.currentSource_.src;\n\t    }\n\n\t    return this.el_.currentSrc;\n\t  }\n\t  /**\n\t   * Get media poster URL.\n\t   *\n\t   * @return {string}\n\t   * @method poster\n\t   */\n\t  ;\n\n\t  _proto.poster = function poster() {\n\t    return this.el_.poster;\n\t  }\n\t  /**\n\t   * Set media poster URL.\n\t   *\n\t   * @param {string} url the poster image's url.\n\t   * @method\n\t   */\n\t  ;\n\n\t  _proto.setPoster = function setPoster(url) {\n\t    this.el_.poster = url;\n\t  }\n\t  /**\n\t   * Is the media preloaded or not.\n\t   *\n\t   * @return {string}\n\t   * @method preload\n\t   */\n\t  ;\n\n\t  _proto.preload = function preload() {\n\t    return this.el_.preload || 'none';\n\t  }\n\t  /**\n\t   * Set the media preload method.\n\t   *\n\t   * @param {string} val Value for preload attribute.\n\t   * @method setPreload\n\t   */\n\t  ;\n\n\t  _proto.setPreload = function setPreload(val) {\n\t    if (this.el_.hasOwnProperty('preload')) {\n\t      this.el_.preload = val;\n\t    }\n\t  }\n\t  /**\n\t   * Is the media auto-played or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method autoplay\n\t   */\n\t  ;\n\n\t  _proto.autoplay = function autoplay() {\n\t    return this.el_.autoplay || false;\n\t  }\n\t  /**\n\t   * Set media autoplay method.\n\t   *\n\t   * @param {boolean} val Value for autoplay attribute.\n\t   * @method setAutoplay\n\t   */\n\t  ;\n\n\t  _proto.setAutoplay = function setAutoplay(val) {\n\t    if (this.el_.hasOwnProperty('autoplay')) {\n\t      this.el_.autoplay = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Does the media has controls or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method controls\n\t   */\n\t  ;\n\n\t  _proto.controls = function controls() {\n\t    return this.el_.controls || false;\n\t  }\n\t  /**\n\t   * Set the media controls method.\n\t   *\n\t   * @param {boolean} val Value for controls attribute.\n\t   * @method setControls\n\t   */\n\t  ;\n\n\t  _proto.setControls = function setControls(val) {\n\t    if (this.el_.hasOwnProperty('controls')) {\n\t      this.el_.controls = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Is the media looped or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method loop\n\t   */\n\t  ;\n\n\t  _proto.loop = function loop() {\n\t    return this.el_.loop || false;\n\t  }\n\t  /**\n\t   * Set the media loop method.\n\t   *\n\t   * @param {boolean} val Value for loop attribute.\n\t   * @method setLoop\n\t   */\n\t  ;\n\n\t  _proto.setLoop = function setLoop(val) {\n\t    if (this.el_.hasOwnProperty('loop')) {\n\t      this.el_.loop = !!val;\n\t    }\n\t  }\n\t  /**\n\t   * Get a TimeRanges object that represents the\n\t   * ranges of the media resource to which it is possible\n\t   * for the user agent to seek.\n\t   *\n\t   * @return {TimeRangeObject}\n\t   * @method seekable\n\t   */\n\t  ;\n\n\t  _proto.seekable = function seekable() {\n\t    return this.el_.seekable;\n\t  }\n\t  /**\n\t   * Is player in the \"seeking\" state or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method seeking\n\t   */\n\t  ;\n\n\t  _proto.seeking = function seeking() {\n\t    return this.el_.seeking;\n\t  }\n\t  /**\n\t   * Is the media ended or not.\n\t   *\n\t   * @return {boolean}\n\t   * @method ended\n\t   */\n\t  ;\n\n\t  _proto.ended = function ended() {\n\t    return this.el_.ended;\n\t  }\n\t  /**\n\t   * Get the current state of network activity\n\t   * NETWORK_EMPTY (numeric value 0)\n\t   * NETWORK_IDLE (numeric value 1)\n\t   * NETWORK_LOADING (numeric value 2)\n\t   * NETWORK_NO_SOURCE (numeric value 3)\n\t   *\n\t   * @return {number}\n\t   * @method networkState\n\t   */\n\t  ;\n\n\t  _proto.networkState = function networkState() {\n\t    return this.el_.networkState;\n\t  }\n\t  /**\n\t   * Get the current state of the player.\n\t   * HAVE_NOTHING (numeric value 0)\n\t   * HAVE_METADATA (numeric value 1)\n\t   * HAVE_CURRENT_DATA (numeric value 2)\n\t   * HAVE_FUTURE_DATA (numeric value 3)\n\t   * HAVE_ENOUGH_DATA (numeric value 4)\n\t   *\n\t   * @return {number}\n\t   * @method readyState\n\t   */\n\t  ;\n\n\t  _proto.readyState = function readyState() {\n\t    return this.el_.readyState;\n\t  }\n\t  /**\n\t   * Does the player support native fullscreen mode or not. (Mobile devices)\n\t   *\n\t   * @return {boolean}\n\t   */\n\t  ;\n\n\t  _proto.supportsFullScreen = function supportsFullScreen() {\n\t    // iOS devices have some problem with HTML5 fullscreen api so we need to fallback to fullWindow mode.\n\t    return false;\n\t  }\n\t  /**\n\t   * Get media player error.\n\t   *\n\t   * @return {string}\n\t   * @method error\n\t   */\n\t  ;\n\n\t  _proto.error = function error() {\n\t    return this.el_.error;\n\t  };\n\n\t  return OgvJS;\n\t}(Tech);\n\t/**\n\t * List of available events of the media player.\n\t *\n\t * @private\n\t * @type {Array}\n\t */\n\n\n\tOgvJS.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\t/**\n\t * Set the value for the player is it has that property.\n\t *\n\t * @param {Element} el\n\t * @param {string} name\n\t * @param value\n\t */\n\n\tOgvJS.setIfAvailable = function (el, name, value) {\n\t  if (el.hasOwnProperty(name)) {\n\t    el[name] = value;\n\t  }\n\t};\n\t/**\n\t * Check if browser/device is supported by Ogv.JS.\n\t *\n\t * @return {boolean}\n\t */\n\n\n\tOgvJS.isSupported = function () {\n\t  return OGVCompat__default['default'].supported('OGVPlayer');\n\t};\n\t/**\n\t * Check if the tech can support the given type.\n\t *\n\t * @param {string} type The mimetype to check\n\t * @return {string} 'probably', 'maybe', or '' (empty string)\n\t */\n\n\n\tOgvJS.canPlayType = function (type) {\n\t  return type.indexOf('/ogg') !== -1 || type.indexOf('/webm') ? 'maybe' : '';\n\t};\n\t/**\n\t * Check if the tech can support the given source\n\t *\n\t * @param srcObj The source object\n\t * @return {string} The options passed to the tech\n\t */\n\n\n\tOgvJS.canPlaySource = function (srcObj) {\n\t  return OgvJS.canPlayType(srcObj.type);\n\t};\n\t/**\n\t * Check if the volume can be changed in this browser/device.\n\t * Volume cannot be changed in a lot of mobile devices.\n\t * Specifically, it can't be changed from 1 on iOS.\n\t *\n\t * @return {boolean} True if volume can be controlled.\n\t */\n\n\n\tOgvJS.canControlVolume = function () {\n\t  if (getDeviceOS() === iPhoneOS) {\n\t    return false;\n\t  }\n\n\t  var p = new OGVPlayer__default['default']();\n\t  return p.hasOwnProperty('volume');\n\t};\n\t/**\n\t * Check if the volume can be muted in this browser/device.\n\t *\n\t * @return {boolean} True if volume can be muted.\n\t */\n\n\n\tOgvJS.canMuteVolume = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the playback rate can be changed in this browser/device.\n\t *\n\t * @return {boolean} True if playback rate can be controlled.\n\t */\n\n\n\tOgvJS.canControlPlaybackRate = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check to see if native 'TextTracks' are supported by this browser/device.\n\t *\n\t * @return {boolean} True if native 'TextTracks' are supported.\n\t */\n\n\n\tOgvJS.supportsNativeTextTracks = function () {\n\t  return false;\n\t};\n\t/**\n\t * Check if the fullscreen resize is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the fullscreen resize is supported.\n\t */\n\n\n\tOgvJS.supportsFullscreenResize = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the progress events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the progress events is supported.\n\t */\n\n\n\tOgvJS.supportsProgressEvents = function () {\n\t  return true;\n\t};\n\t/**\n\t * Check if the time update events is supported by this browser/device.\n\t *\n\t * @return {boolean} True if the time update events is supported.\n\t */\n\n\n\tOgvJS.supportsTimeupdateEvents = function () {\n\t  return true;\n\t};\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports volume control.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports muting volume.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canMuteVolume}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech supports changing the speed at which the media plays.\n\t * Examples:\n\t *   - Set player to play 2x (twice) as fast.\n\t *   - Set player to play 0.5x (half) as fast.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.canControlPlaybackRate}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports native 'TextTracks'.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsNativeTextTracks}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports fullscreen resize.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsFullscreenResize}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports progress events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsProgressEvents}\n\t */\n\n\t/**\n\t * Boolean indicating whether the 'OgvJS' tech currently supports time update events.\n\t *\n\t * @type {boolean}\n\t * @default {@link OgvJS.supportsTimeupdateEvents}\n\t */\n\n\n\t[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresFullscreenResize', 'supportsFullscreenResize'], ['featuresProgressEvents', 'supportsProgressEvents'], ['featuresTimeupdateEvents', 'supportsTimeupdateEvents']].forEach(function (_ref) {\n\t  var key = _ref[0],\n\t      fn = _ref[1];\n\t  defineLazyProperty(OgvJS.prototype, key, function () {\n\t    OgvJS[fn]();\n\t  }, true);\n\t});\n\tTech.registerTech('OgvJS', OgvJS);\n\n\treturn OgvJS;\n\n})));\n"],"names":["global","factory","this","videojs","ogvBase","_interopDefaultLegacy","e","_typeof","videojs__default","OGVCompat__default","OGVCompat","OGVLoader__default","OGVLoader","OGVPlayer__default","OGVPlayer","createCommonjsModule","fn","basedir","module","path","exports","require","base","Error","commonjsRequire","setPrototypeOf","_setPrototypeOf","o","p","Object","__proto__","__esModule","inheritsLoose","subClass","superClass","prototype","create","constructor","Tech","getComponent","iPhoneOS","getDeviceOS","ua","navigator","userAgent","test","platform","maxTouchPoints","OgvJS","_Tech","options","ready","_this","call","el_","src","source","setIfAvailable","autoplay","loop","poster","preload","on","canvas","getElementsByTagName","style","removeProperty","triggerReady","_proto","createEl","options_","el","className","tag","play","playbackRate","setPlaybackRate","val","hasOwnProperty","played","pause","paused","currentTime","setCurrentTime","seconds","log","duration","Infinity","buffered","volume","setVolume","percentAsDecimal","muted","setMuted","defaultMuted","width","offsetWidth","height","offsetHeight","videoWidth","videoHeight","_src","load","currentSrc","currentSource_","setPoster","url","setPreload","setAutoplay","controls","setControls","setLoop","seekable","seeking","ended","networkState","readyState","supportsFullScreen","error","Events","name","value","isSupported","supported","canPlayType","type","indexOf","canPlaySource","srcObj","canControlVolume","canMuteVolume","canControlPlaybackRate","supportsNativeTextTracks","supportsFullscreenResize","supportsProgressEvents","supportsTimeupdateEvents","forEach","_ref","key","obj","getValue","setter","set","defineProperty","enumerable","writable","configurable","get","defineLazyProperty","registerTech","define","amd","globalThis","self","videojsOgvjs"],"mappings":"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"}
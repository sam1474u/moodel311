{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the gateways modal.\n *\n * @module     core_payment/gateways_modal\n * @copyright  2019 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {getAvailableGateways} from './repository';\nimport Selectors from './selectors';\nimport ModalEvents from 'core/modal_events';\nimport PaymentEvents from 'core_payment/events';\nimport {add as addToast, addToastRegion} from 'core/toast';\nimport Notification from 'core/notification';\nimport ModalGateways from './modal_gateways';\n\n/**\n * Register event listeners for the module.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const gatewayTrigger = e.target.closest('[data-action=\"core_payment/triggerPayment\"]');\n        if (gatewayTrigger) {\n            e.preventDefault();\n\n            show(gatewayTrigger, {focusOnClose: e.target});\n        }\n    });\n};\n\n/**\n * Shows the gateway selector modal.\n *\n * @param {HTMLElement} rootNode\n * @param {Object} options - Additional options\n * @param {HTMLElement} options.focusOnClose The element to focus on when the modal is closed.\n */\nconst show = async(rootNode, {\n    focusOnClose = null,\n} = {}) => {\n    const modal = await ModalFactory.create({\n        type: ModalGateways.TYPE,\n        title: await getString('selectpaymenttype', 'core_payment'),\n        body: await Templates.render('core_payment/gateways_modal', {}),\n    });\n\n    const rootElement = modal.getRoot()[0];\n    addToastRegion(rootElement);\n\n    modal.show();\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        // Destroy when hidden.\n        modal.destroy();\n        try {\n            focusOnClose.focus();\n        } catch (e) {\n            // eslint-disable-line\n        }\n    });\n\n    modal.getRoot().on(PaymentEvents.proceed, (e) => {\n        const gateway = (rootElement.querySelector(Selectors.values.gateway) || {value: ''}).value;\n\n        if (gateway) {\n            processPayment(\n                gateway,\n                rootNode.dataset.component,\n                rootNode.dataset.paymentarea,\n                rootNode.dataset.itemid,\n                rootNode.dataset.description\n            )\n            .then(message => {\n                modal.hide();\n                Notification.addNotification({\n                    message: message,\n                    type: 'success',\n                });\n                location.href = rootNode.dataset.successurl;\n\n                // The following return statement is never reached. It is put here just to make eslint happy.\n                return message;\n            })\n            .catch(message => Notification.alert('', message));\n        } else {\n            // We cannot use await in the following line.\n            // The reason is that we are preventing the default action of the save event being triggered,\n            // therefore we cannot define the event handler function asynchronous.\n            getString('nogatewayselected', 'core_payment').then(message => addToast(message)).catch();\n        }\n\n        e.preventDefault();\n    });\n\n    // Re-calculate the cost when gateway is changed.\n    rootElement.addEventListener('change', e => {\n        if (e.target.matches(Selectors.elements.gateways)) {\n            updateCostRegion(rootElement, rootNode.dataset.cost);\n        }\n    });\n\n    const gateways = await getAvailableGateways(rootNode.dataset.component, rootNode.dataset.paymentarea, rootNode.dataset.itemid);\n    const context = {\n        gateways\n    };\n\n    const {html, js} = await Templates.renderForPromise('core_payment/gateways', context);\n    Templates.replaceNodeContents(rootElement.querySelector(Selectors.regions.gatewaysContainer), html, js);\n    selectSingleGateway(rootElement);\n    await updateCostRegion(rootElement, rootNode.dataset.cost);\n};\n\n/**\n * Auto-select the gateway if there is only one gateway.\n *\n * @param {HTMLElement} root An HTMLElement that contains the cost region\n */\nconst selectSingleGateway = root => {\n    const gateways = root.querySelectorAll(Selectors.elements.gateways);\n\n    if (gateways.length == 1) {\n        gateways[0].checked = true;\n    }\n};\n\n/**\n * Shows the cost of the item the user is purchasing in the cost region.\n *\n * @param {HTMLElement} root An HTMLElement that contains the cost region\n * @param {string} defaultCost The default cost that is going to be displayed if no gateway is selected\n * @returns {Promise<void>}\n */\nconst updateCostRegion = async(root, defaultCost = '') => {\n    const gatewayElement = root.querySelector(Selectors.values.gateway);\n    const surcharge = parseInt((gatewayElement || {dataset: {surcharge: 0}}).dataset.surcharge);\n    const cost = (gatewayElement || {dataset: {cost: defaultCost}}).dataset.cost;\n\n    const {html, js} = await Templates.renderForPromise('core_payment/fee_breakdown', {fee: cost, surcharge});\n    Templates.replaceNodeContents(root.querySelector(Selectors.regions.costContainer), html, js);\n};\n\n/**\n * Process payment using the selected gateway.\n *\n * @param {string} gateway The gateway to be used for payment\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea Name of the area in the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nconst processPayment = async(gateway, component, paymentArea, itemId, description) => {\n    const paymentMethod = await import(`paygw_${gateway}/gateways_modal`);\n    return paymentMethod.process(component, paymentArea, itemId, description);\n};\n\n/**\n * Set up the payment actions.\n */\nexport const init = () => {\n    if (!init.initialised) {\n        // Event listeners should only be registered once.\n        init.initialised = true;\n        registerEventListeners();\n    }\n};\n\n/**\n * Whether the init function was called before.\n *\n * @static\n * @type {boolean}\n */\ninit.initialised = false;\n"],"names":["_modal_factory","_interopRequireDefault","_templates","_selectors","_modal_events","_events","_notification","_modal_gateways","_ref","_ref3","_ref4","show","_asyncToGenerator","regeneratorRuntime","mark","rootNode","_ref2$focusOnClose","focusOnClose","modal","rootElement","gateways","context","_yield$Templates$rend","html","js","_args","arguments","wrap","_context","prev","next","length","undefined","t0","ModalFactory","default","t1","ModalGateways","TYPE","_str","get_string","t2","sent","Templates","render","t3","t4","type","title","body","create","call","getRoot","_toast","addToastRegion","on","ModalEvents","hidden","destroy","focus","e","PaymentEvents","proceed","gateway","querySelector","Selectors","values","value","processPayment","dataset","component","paymentarea","itemid","description","then","message","hide","Notification","addNotification","location","href","successurl","catch","alert","add","preventDefault","addEventListener","target","matches","elements","updateCostRegion","cost","renderForPromise","replaceNodeContents","regions","gatewaysContainer","selectSingleGateway","stop","_callee","_x","apply","this","root","querySelectorAll","checked","defaultCost","gatewayElement","surcharge","_yield$Templates$rend2","_args2","_context2","parseInt","fee","costContainer","_callee2","_x2","_callee3","paymentArea","itemId","paymentMethod","_context3","_systemImportTransformerGlobalIdentifier","define","amd","Promise","resolve","reject","require","concat","process","_x3","_x4","_x5","_x6","_x7","init","initialised","document","gatewayTrigger","closest"],"mappings":"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"}
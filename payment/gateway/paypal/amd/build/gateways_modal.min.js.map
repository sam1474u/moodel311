{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for PayPal content in the gateways modal.\n *\n * @module     paygw_paypal/gateway_modal\n * @copyright  2020 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from './repository';\nimport Templates from 'core/templates';\nimport Truncate from 'core/truncate';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @returns {Promise<Modal>}\n */\nconst showModalWithPlaceholder = async() => {\n    const modal = await ModalFactory.create({\n        body: await Templates.render('paygw_paypal/paypal_button_placeholder', {})\n    });\n    modal.show();\n    return modal;\n};\n\n/**\n * Process the payment.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nexport const process = (component, paymentArea, itemId, description) => {\n    return Promise.all([\n        showModalWithPlaceholder(),\n        Repository.getConfigForJs(component, paymentArea, itemId),\n    ])\n    .then(([modal, paypalConfig]) => {\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        return Promise.all([\n            modal,\n            paypalConfig,\n            switchSdk(paypalConfig.clientid, paypalConfig.currency),\n        ]);\n    })\n    .then(([modal, paypalConfig]) => {\n        // We have to clear the body. The render method in paypal.Buttons will render everything.\n        modal.setBody('');\n\n        return new Promise(resolve => {\n            window.paypal.Buttons({\n                // Set up the transaction.\n                createOrder: function(data, actions) {\n                    return actions.order.create({\n                        purchase_units: [{ // eslint-disable-line\n                            amount: {\n                                currency_code: paypalConfig.currency_code, // eslint-disable-line\n                                value: paypalConfig.cost,\n                            },\n                            description: Truncate.truncate(description, {length: 127, stripTags: true}),\n                        }],\n                        application_context: { // eslint-disable-line\n                            shipping_preference: 'NO_SHIPPING', // eslint-disable-line\n                            brand_name: Truncate.truncate(paypalConfig.brandname, {length: 127, stripTags: true}), // eslint-disable-line\n                        },\n                    });\n                },\n                // Finalise the transaction.\n                onApprove: function(data) {\n                    modal.getRoot().on(ModalEvents.outsideClick, (e) => {\n                        // Prevent closing the modal when clicking outside of it.\n                        e.preventDefault();\n                    });\n\n                    modal.setBody(getString('authorising', 'paygw_paypal'));\n\n                    Repository.markTransactionComplete(component, paymentArea, itemId, data.orderID)\n                    .then(res => {\n                        modal.hide();\n                        return res;\n                    })\n                    .then(resolve);\n                }\n            }).render(modal.getBody()[0]);\n        });\n    })\n    .then(res => {\n        if (res.success) {\n            return Promise.resolve(res.message);\n        }\n\n        return Promise.reject(res.message);\n    });\n};\n\n/**\n * Unloads the previously loaded PayPal JavaScript SDK, and loads a new one.\n *\n * @param {string} clientId PayPal client ID\n * @param {string} currency The currency\n * @returns {Promise}\n */\nconst switchSdk = (clientId, currency) => {\n    const sdkUrl = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=${currency}`;\n\n    // Check to see if this file has already been loaded. If so just go straight to the func.\n    if (switchSdk.currentlyloaded === sdkUrl) {\n        return Promise.resolve();\n    }\n\n    // PayPal can only work with one currency at the same time. We have to unload the previously loaded script\n    // if it was loaded for a different currency. Weird way indeed, but the only way.\n    // See: https://github.com/paypal/paypal-checkout-components/issues/1180\n    if (switchSdk.currentlyloaded) {\n        const suspectedScript = document.querySelector(`script[src=\"${switchSdk.currentlyloaded}\"]`);\n        if (suspectedScript) {\n            suspectedScript.parentNode.removeChild(suspectedScript);\n        }\n    }\n\n    const script = document.createElement('script');\n\n    return new Promise(resolve => {\n        if (script.readyState) {\n            script.onreadystatechange = function() {\n                if (this.readyState == 'complete' || this.readyState == 'loaded') {\n                    this.onreadystatechange = null;\n                    resolve();\n                }\n            };\n        } else {\n            script.onload = function() {\n                resolve();\n            };\n        }\n\n        script.setAttribute('src', sdkUrl);\n        document.head.appendChild(script);\n\n        switchSdk.currentlyloaded = sdkUrl;\n    });\n};\n\n/**\n * Holds the full url of loaded PayPal JavaScript SDK.\n *\n * @static\n * @type {string}\n */\nswitchSdk.currentlyloaded = '';\n"],"names":["Repository","_interopRequireWildcard","_templates","_interopRequireDefault","_truncate","_modal_factory","_modal_events","_ref","showModalWithPlaceholder","regeneratorRuntime","mark","_callee","modal","wrap","_context","prev","next","t0","ModalFactory","default","Templates","render","t1","sent","t2","body","create","call","show","abrupt","stop","apply","this","arguments","component","paymentArea","itemId","description","Promise","all","getConfigForJs","then","_ref2","_ref3","_slicedToArray","paypalConfig","getRoot","on","ModalEvents","hidden","destroy","switchSdk","clientid","currency","_ref4","_ref5","setBody","resolve","window","paypal","Buttons","createOrder","data","actions","order","purchase_units","amount","currency_code","value","cost","Truncate","truncate","length","stripTags","application_context","shipping_preference","brand_name","brandname","onApprove","outsideClick","e","preventDefault","markTransactionComplete","orderID","res","hide","getBody","success","message","reject","clientId","sdkUrl","concat","currentlyloaded","suspectedScript","document","querySelector","parentNode","removeChild","script","createElement","readyState","onreadystatechange","onload","setAttribute","head","appendChild"],"mappings":"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"}
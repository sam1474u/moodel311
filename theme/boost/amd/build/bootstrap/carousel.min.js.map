{"version":3,"file":"carousel.min.js","sources":["../../src/bootstrap/carousel.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst DIRECTION_NEXT = 'next'\nconst DIRECTION_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_RIGHT = 'carousel-item-right'\nconst CLASS_NAME_LEFT = 'carousel-item-left'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]'\n\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._element = element\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    const $element = $(this._element)\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($element.is(':visible') && $element.css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex ?\n      DIRECTION_NEXT :\n      DIRECTION_PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items = null\n    this._config = null\n    this._element = null\n    this._interval = null\n    this._isPaused = null\n    this._isSliding = null\n    this._activeElement = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(EVENT_MOUSEENTER, event => this.pause(event))\n        .on(EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG))\n      .on(EVENT_DRAG_START, e => e.preventDefault())\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event))\n      $(this._element).on(EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event))\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event))\n      $(this._element).on(EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) :\n      []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT\n    const isPrevDirection = direction === DIRECTION_PREV\n    const activeIndex = this._getItemIndex(activeElement)\n    const lastItemIndex = this._items.length - 1\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta = direction === DIRECTION_PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1 ?\n      this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM))\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE))\n      $(indicators).removeClass(CLASS_NAME_ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = parseInt(element.getAttribute('data-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT\n      orderClassName = CLASS_NAME_NEXT\n      eventDirectionName = DIRECTION_LEFT\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT\n      orderClassName = CLASS_NAME_PREV\n      eventDirectionName = DIRECTION_RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(CLASS_NAME_ACTIVE)\n\n          $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n      $(nextElement).addClass(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n"],"names":["_jquery","_interopRequireDefault","_util","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","concat","EVENT_CLICK_DATA_API","SELECTOR_INDICATORS","PointerType","TOUCH","PEN","Carousel","element","config","_classCallCheck","this","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","value","each","data","default","_typeof","_objectSpread","action","to","TypeError","ride","cycle","event","selector","Util","getSelectorFromElement","target","hasClass","slideIndex","getAttribute","_jQueryInterface","call","preventDefault","_slide","$element","hidden","is","css","next","triggerTransitionEnd","clearInterval","_updateInterval","setInterval","visibilityState","nextWhenVisible","bind","index","_this","activeIndex","_getItemIndex","length","one","direction","off","removeData","typeCheckConfig","absDeltax","Math","abs","prev","_this2","on","_keydown","_addTouchEventListeners","_this3","start","originalEvent","pointerType","toUpperCase","clientX","touches","end","_handleSwipe","clearTimeout","setTimeout","querySelectorAll","e","classList","add","move","test","tagName","which","parentNode","slice","indexOf","activeElement","isNextDirection","isPrevDirection","lastItemIndex","delta","itemIndex","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","Event","from","trigger","indicators","removeClass","nextIndicator","children","addClass","elementInterval","parseInt","defaultInterval","directionalClassName","orderClassName","_this4","activeElementIndex","nextElement","_getItemByDirection","nextElementIndex","isCycling","_triggerSlideEvent","isDefaultPrevented","_setActiveIndicatorElement","slidEvent","reflow","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","_dataApiClickHandler","carousels","i","len","$carousel","Constructor","noConflict"],"mappings":"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"}
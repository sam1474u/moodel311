{"version":3,"file":"tour.min.js","sources":["../src/tour.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage user tours in Moodle.\n *\n * @module tool_usertours/tour\n * @copyright  2018 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Aria from 'core/aria';\nimport Popper from 'core/popper';\n\n/**\n * A Tour.\n *\n * @class\n */\nexport default class Tour {\n    /**\n     * @param   {object}    config  The configuration object.\n     */\n    constructor(config) {\n        this.init(config);\n    }\n\n    /**\n     * Initialise the tour.\n     *\n     * @method  init\n     * @param   {Object}    config  The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    init(config) {\n        // Unset all handlers.\n        this.eventHandlers = {};\n\n        // Reset the current tour states.\n        this.reset();\n\n        // Store the initial configuration.\n        this.originalConfiguration = config || {};\n\n        // Apply configuration.\n        this.configure.apply(this, arguments);\n\n        try {\n            this.storage = window.sessionStorage;\n            this.storageKey = 'tourstate_' + this.tourName;\n        } catch (e) {\n            this.storage = false;\n            this.storageKey = '';\n        }\n\n        return this;\n    }\n\n    /**\n     * Reset the current tour state.\n     *\n     * @method  reset\n     * @chainable\n     * @return {Object} this.\n     */\n    reset() {\n        // Hide the current step.\n        this.hide();\n\n        // Unset all handlers.\n        this.eventHandlers = [];\n\n        // Unset all listeners.\n        this.resetStepListeners();\n\n        // Unset the original configuration.\n        this.originalConfiguration = {};\n\n        // Reset the current step number and list of steps.\n        this.steps = [];\n\n        // Reset the current step number.\n        this.currentStepNumber = 0;\n\n        return this;\n    }\n\n    /**\n     * Prepare tour configuration.\n     *\n     * @method  configure\n     * @param {Object} config The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    configure(config) {\n        if (typeof config === 'object') {\n            // Tour name.\n            if (typeof config.tourName !== 'undefined') {\n                this.tourName = config.tourName;\n            }\n\n            // Set up eventHandlers.\n            if (config.eventHandlers) {\n                for (let eventName in config.eventHandlers) {\n                    config.eventHandlers[eventName].forEach(function(handler) {\n                        this.addEventHandler(eventName, handler);\n                    }, this);\n                }\n            }\n\n            // Reset the step configuration.\n            this.resetStepDefaults(true);\n\n            // Configure the steps.\n            if (typeof config.steps === 'object') {\n                this.steps = config.steps;\n            }\n\n            if (typeof config.template !== 'undefined') {\n                this.templateContent = config.template;\n            }\n        }\n\n        // Check that we have enough to start the tour.\n        this.checkMinimumRequirements();\n\n        return this;\n    }\n\n    /**\n     * Check that the configuration meets the minimum requirements.\n     *\n     * @method  checkMinimumRequirements\n     */\n    checkMinimumRequirements() {\n        // Need a tourName.\n        if (!this.tourName) {\n            throw new Error(\"Tour Name required\");\n        }\n\n        // Need a minimum of one step.\n        if (!this.steps || !this.steps.length) {\n            throw new Error(\"Steps must be specified\");\n        }\n    }\n\n    /**\n     * Reset step default configuration.\n     *\n     * @method  resetStepDefaults\n     * @param   {Boolean}   loadOriginalConfiguration   Whether to load the original configuration supplied with the Tour.\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepDefaults(loadOriginalConfiguration) {\n        if (typeof loadOriginalConfiguration === 'undefined') {\n            loadOriginalConfiguration = true;\n        }\n\n        this.stepDefaults = {};\n        if (!loadOriginalConfiguration || typeof this.originalConfiguration.stepDefaults === 'undefined') {\n            this.setStepDefaults({});\n        } else {\n            this.setStepDefaults(this.originalConfiguration.stepDefaults);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the step defaults.\n     *\n     * @method  setStepDefaults\n     * @param   {Object}    stepDefaults                The step defaults to apply to all steps\n     * @chainable\n     * @return {Object} this.\n     */\n    setStepDefaults(stepDefaults) {\n        if (!this.stepDefaults) {\n            this.stepDefaults = {};\n        }\n        $.extend(\n            this.stepDefaults,\n            {\n                element:        '',\n                placement:      'top',\n                delay:          0,\n                moveOnClick:    false,\n                moveAfterTime:  0,\n                orphan:         false,\n                direction:      1,\n            },\n            stepDefaults\n        );\n\n        return this;\n    }\n\n    /**\n     * Retrieve the current step number.\n     *\n     * @method  getCurrentStepNumber\n     * @return  {Integer}                   The current step number\n     */\n    getCurrentStepNumber() {\n        return parseInt(this.currentStepNumber, 10);\n    }\n\n    /**\n     * Store the current step number.\n     *\n     * @method  setCurrentStepNumber\n     * @param   {Integer}   stepNumber      The current step number\n     * @chainable\n     */\n    setCurrentStepNumber(stepNumber) {\n        this.currentStepNumber = stepNumber;\n        if (this.storage) {\n            try {\n                this.storage.setItem(this.storageKey, stepNumber);\n            } catch (e) {\n                if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\n                    this.storage.removeItem(this.storageKey);\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the next step number after the currently displayed step.\n     *\n     * @method  getNextStepNumber\n     * @param   {Integer}   stepNumber      The current step number\n     * @return  {Integer}    The next step number to display\n     */\n    getNextStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let nextStepNumber = stepNumber + 1;\n\n        // Keep checking the remaining steps.\n        while (nextStepNumber <= this.steps.length) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(nextStepNumber))) {\n                return nextStepNumber;\n            }\n            nextStepNumber++;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the previous step number before the currently displayed step.\n     *\n     * @method  getPreviousStepNumber\n     * @param   {Integer}   stepNumber      The current step number\n     * @return  {Integer}    The previous step number to display\n     */\n    getPreviousStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let previousStepNumber = stepNumber - 1;\n\n        // Keep checking the remaining steps.\n        while (previousStepNumber >= 0) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(previousStepNumber))) {\n                return previousStepNumber;\n            }\n            previousStepNumber--;\n        }\n\n        return null;\n    }\n\n    /**\n     * Is the step the final step number?\n     *\n     * @method  isLastStep\n     * @param   {Integer}   stepNumber  Step number to test\n     * @return  {Boolean}               Whether the step is the final step\n     */\n    isLastStep(stepNumber) {\n        let nextStepNumber = this.getNextStepNumber(stepNumber);\n\n        return nextStepNumber === null;\n    }\n\n    /**\n     * Is the step the first step number?\n     *\n     * @method  isFirstStep\n     * @param   {Integer}   stepNumber  Step number to test\n     * @return  {Boolean}               Whether the step is the first step\n     */\n    isFirstStep(stepNumber) {\n        let previousStepNumber = this.getPreviousStepNumber(stepNumber);\n\n        return previousStepNumber === null;\n    }\n\n    /**\n     * Is this step potentially visible?\n     *\n     * @method  isStepPotentiallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is the potentially visible\n     */\n    isStepPotentiallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            // If it is actually visible, it is already potentially visible.\n            return true;\n        }\n\n        if (typeof stepConfig.orphan !== 'undefined' && stepConfig.orphan) {\n            // Orphan steps have no target. They are always visible.\n            return true;\n        }\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay) {\n            // Only return true if the activated has not been used yet.\n            return true;\n        }\n\n        // Not theoretically, or actually visible.\n        return false;\n    }\n\n    /**\n     * Is this step actually visible?\n     *\n     * @method  isStepActuallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is actually visible\n     */\n    isStepActuallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        if (target && target.length && target.is(':visible')) {\n            // Without a target, there can be no step.\n            return !!target.length;\n        }\n\n        return false;\n    }\n\n    /**\n     * Go to the next step in the tour.\n     *\n     * @method  next\n     * @chainable\n     * @return {Object} this.\n     */\n    next() {\n        return this.gotoStep(this.getNextStepNumber());\n    }\n\n    /**\n     * Go to the previous step in the tour.\n     *\n     * @method  previous\n     * @chainable\n     * @return {Object} this.\n     */\n    previous() {\n        return this.gotoStep(this.getPreviousStepNumber(), -1);\n    }\n\n    /**\n     * Go to the specified step in the tour.\n     *\n     * @method  gotoStep\n     * @param   {Integer}   stepNumber     The step number to display\n     * @param   {Integer}   direction      Next or previous step\n     * @chainable\n     * @return {Object} this.\n     */\n    gotoStep(stepNumber, direction) {\n        if (stepNumber < 0) {\n            return this.endTour();\n        }\n\n        let stepConfig = this.getStepConfig(stepNumber);\n        if (stepConfig === null) {\n            return this.endTour();\n        }\n\n        return this._gotoStep(stepConfig, direction);\n    }\n\n    _gotoStep(stepConfig, direction) {\n        if (!stepConfig) {\n            return this.endTour();\n        }\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay && !stepConfig.delayed) {\n            stepConfig.delayed = true;\n            window.setTimeout(this._gotoStep.bind(this), stepConfig.delay, stepConfig, direction);\n\n            return this;\n        } else if (!stepConfig.orphan && !this.isStepActuallyVisible(stepConfig)) {\n            let fn = direction == -1 ? 'getPreviousStepNumber' : 'getNextStepNumber';\n            return this.gotoStep(this[fn](stepConfig.stepNumber), direction);\n        }\n\n        this.hide();\n\n        this.fireEventHandlers('beforeRender', stepConfig);\n        this.renderStep(stepConfig);\n        this.fireEventHandlers('afterRender', stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Fetch the normalised step configuration for the specified step number.\n     *\n     * @method  getStepConfig\n     * @param   {Integer}   stepNumber      The step number to fetch configuration for\n     * @return  {Object}                    The step configuration\n     */\n    getStepConfig(stepNumber) {\n        if (stepNumber === null || stepNumber < 0 || stepNumber >= this.steps.length) {\n            return null;\n        }\n\n        // Normalise the step configuration.\n        let stepConfig = this.normalizeStepConfig(this.steps[stepNumber]);\n\n        // Add the stepNumber to the stepConfig.\n        stepConfig = $.extend(stepConfig, {stepNumber: stepNumber});\n\n        return stepConfig;\n    }\n\n    /**\n     * Normalise the supplied step configuration.\n     *\n     * @method  normalizeStepConfig\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Object}                    The normalised step configuration\n     */\n    normalizeStepConfig(stepConfig) {\n\n        if (typeof stepConfig.reflex !== 'undefined' && typeof stepConfig.moveAfterClick === 'undefined') {\n            stepConfig.moveAfterClick = stepConfig.reflex;\n        }\n\n        if (typeof stepConfig.element !== 'undefined' && typeof stepConfig.target === 'undefined') {\n            stepConfig.target = stepConfig.element;\n        }\n\n        if (typeof stepConfig.content !== 'undefined' && typeof stepConfig.body === 'undefined') {\n            stepConfig.body = stepConfig.content;\n        }\n\n        stepConfig = $.extend({}, this.stepDefaults, stepConfig);\n\n        stepConfig = $.extend({}, {\n            attachTo: stepConfig.target,\n            attachPoint: 'after',\n        }, stepConfig);\n\n        if (stepConfig.attachTo) {\n            stepConfig.attachTo = $(stepConfig.attachTo).first();\n        }\n\n        return stepConfig;\n    }\n\n    /**\n     * Fetch the actual step target from the selector.\n     *\n     * This should not be called until after any delay has completed.\n     *\n     * @method  getStepTarget\n     * @param   {Object}    stepConfig      The step configuration\n     * @return  {$}\n     */\n    getStepTarget(stepConfig) {\n        if (stepConfig.target) {\n            return $(stepConfig.target);\n        }\n\n        return null;\n    }\n\n    /**\n     * Fire any event handlers for the specified event.\n     *\n     * @param   {String}    eventName       The name of the event to handle\n     * @param   {Object}    data            Any data to pass to the event\n     * @chainable\n     * @return {Object} this.\n     */\n    fireEventHandlers(eventName, data) {\n        if (typeof this.eventHandlers[eventName] === 'undefined') {\n            return this;\n        }\n\n        this.eventHandlers[eventName].forEach(function(thisEvent) {\n            thisEvent.call(this, data);\n        }, this);\n\n        return this;\n    }\n\n    /**\n     * @method addEventHandler\n     * @param  {string}      eventName       The name of the event to listen for\n     * @param  {function}    handler         The event handler to call\n     * @return {Object} this.\n     */\n    addEventHandler(eventName, handler) {\n        if (typeof this.eventHandlers[eventName] === 'undefined') {\n            this.eventHandlers[eventName] = [];\n        }\n\n        this.eventHandlers[eventName].push(handler);\n\n        return this;\n    }\n\n    /**\n     * Process listeners for the step being shown.\n     *\n     * @method  processStepListeners\n     * @param   {object}    stepConfig      The configuration for the step\n     * @chainable\n     * @return {Object} this.\n     */\n    processStepListeners(stepConfig) {\n        this.listeners.push(\n        // Next/Previous buttons.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"next\"]', $.proxy(this.next, this)]\n        }, {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"previous\"]', $.proxy(this.previous, this)]\n        },\n\n        // Close and end tour buttons.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"end\"]', $.proxy(this.endTour, this)]\n        },\n\n        // Click backdrop and hide tour.\n        {\n            node: $('[data-flexitour=\"backdrop\"]'),\n            args: ['click', $.proxy(this.hide, this)]\n        },\n\n        // Keypresses.\n        {\n            node: $('body'),\n            args: ['keydown', $.proxy(this.handleKeyDown, this)]\n        });\n\n        if (stepConfig.moveOnClick) {\n            var targetNode = this.getStepTarget(stepConfig);\n            this.listeners.push({\n                node: targetNode,\n                args: ['click', $.proxy(function(e) {\n                    if ($(e.target).parents('[data-flexitour=\"container\"]').length === 0) {\n                        // Ignore clicks when they are in the flexitour.\n                        window.setTimeout($.proxy(this.next, this), 500);\n                    }\n                }, this)]\n            });\n        }\n\n        this.listeners.forEach(function(listener) {\n            listener.node.on.apply(listener.node, listener.args);\n        });\n\n        return this;\n    }\n\n    /**\n     * Reset step listeners.\n     *\n     * @method  resetStepListeners\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepListeners() {\n        // Stop listening to all external handlers.\n        if (this.listeners) {\n            this.listeners.forEach(function(listener) {\n                listener.node.off.apply(listener.node, listener.args);\n            });\n        }\n        this.listeners = [];\n\n        return this;\n    }\n\n    /**\n     * The standard step renderer.\n     *\n     * @method  renderStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    renderStep(stepConfig) {\n        // Store the current step configuration for later.\n        this.currentStepConfig = stepConfig;\n        this.setCurrentStepNumber(stepConfig.stepNumber);\n\n        // Fetch the template and convert it to a $ object.\n        let template = $(this.getTemplateContent());\n\n        // Title.\n        template.find('[data-placeholder=\"title\"]')\n            .html(stepConfig.title);\n\n        // Body.\n        template.find('[data-placeholder=\"body\"]')\n            .html(stepConfig.body);\n\n        // Is this the first step?\n        if (this.isFirstStep(stepConfig.stepNumber)) {\n            template.find('[data-role=\"previous\"]').hide();\n        } else {\n            template.find('[data-role=\"previous\"]').prop('disabled', false);\n        }\n\n        // Is this the final step?\n        if (this.isLastStep(stepConfig.stepNumber)) {\n            template.find('[data-role=\"next\"]').hide();\n            template.find('[data-role=\"end\"]').removeClass(\"btn-secondary\").addClass(\"btn-primary\");\n        } else {\n            template.find('[data-role=\"next\"]').prop('disabled', false);\n        }\n\n        template.find('[data-role=\"previous\"]').attr('role', 'button');\n        template.find('[data-role=\"next\"]').attr('role', 'button');\n        template.find('[data-role=\"end\"]').attr('role', 'button');\n\n        // Replace the template with the updated version.\n        stepConfig.template = template;\n\n        // Add to the page.\n        this.addStepToPage(stepConfig);\n\n        // Process step listeners after adding to the page.\n        // This uses the currentNode.\n        this.processStepListeners(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Getter for the template content.\n     *\n     * @method  getTemplateContent\n     * @return  {$}\n     */\n    getTemplateContent() {\n        return $(this.templateContent).clone();\n    }\n\n    /**\n     * Helper to add a step to the page.\n     *\n     * @method  addStepToPage\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    addStepToPage(stepConfig) {\n        // Create the stepNode from the template data.\n        let currentStepNode = $('<span data-flexitour=\"container\"></span>')\n            .html(stepConfig.template)\n            .hide();\n\n        // The scroll animation occurs on the body or html.\n        let animationTarget = $('body, html')\n            .stop(true, true);\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            let targetNode = this.getStepTarget(stepConfig);\n\n            targetNode.data('flexitour', 'target');\n\n            let zIndex = this.calculateZIndex(targetNode);\n            if (zIndex) {\n                stepConfig.zIndex = zIndex + 1;\n            }\n\n            if (stepConfig.zIndex) {\n                currentStepNode.css('zIndex', stepConfig.zIndex + 1);\n            }\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            // Ensure that the step node is positioned.\n            // Some situations mean that the value is not properly calculated without this step.\n            this.currentStepNode.css({\n                top: 0,\n                left: 0,\n            });\n\n            animationTarget\n                .animate({\n                    scrollTop: this.calculateScrollTop(stepConfig),\n                }).promise().then(function() {\n                        this.positionStep(stepConfig);\n                        this.revealStep(stepConfig);\n                        return;\n                    }.bind(this))\n                    .catch(function() {\n                        // Silently fail.\n                    });\n\n        } else if (stepConfig.orphan) {\n            stepConfig.isOrphan = true;\n\n            // This will be appended to the body instead.\n            stepConfig.attachTo = $('body').first();\n            stepConfig.attachPoint = 'append';\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            // This is an orphaned step.\n            currentStepNode.addClass('orphan');\n\n            // It lives in the body.\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            this.currentStepNode.offset(this.calculateStepPositionInPage());\n            this.currentStepNode.css('position', 'fixed');\n\n            this.currentStepPopper = new Popper(\n                $('body'),\n                this.currentStepNode[0], {\n                    removeOnDestroy: true,\n                    placement: stepConfig.placement + '-start',\n                    arrowElement: '[data-role=\"arrow\"]',\n                    // Empty the modifiers. We've already placed the step and don't want it moved.\n                    modifiers: {\n                        hide: {\n                            enabled: false,\n                        },\n                        applyStyle: {\n                            onLoad: null,\n                            enabled: false,\n                        },\n                    }\n                }\n            );\n\n            this.revealStep(stepConfig);\n        }\n\n        return this;\n    }\n\n    /**\n     * Make the given step visible.\n     *\n     * @method revealStep\n     * @param {Object} stepConfig The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    revealStep(stepConfig) {\n        // Fade the step in.\n        this.currentStepNode.fadeIn('', $.proxy(function() {\n                // Announce via ARIA.\n                this.announceStep(stepConfig);\n\n                // Focus on the current step Node.\n                this.currentStepNode.focus();\n                window.setTimeout($.proxy(function() {\n                    // After a brief delay, focus again.\n                    // There seems to be an issue with Jaws where it only reads the dialogue title initially.\n                    // This second focus helps it to read the full dialogue.\n                    if (this.currentStepNode) {\n                        this.currentStepNode.focus();\n                    }\n                }, this), 100);\n\n            }, this));\n\n        return this;\n    }\n\n    /**\n     * Helper to announce the step on the page.\n     *\n     * @method  announceStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    announceStep(stepConfig) {\n        // Setup the step Dialogue as per:\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_nonmodal\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_modal\n\n        // Generate an ID for the current step node.\n        let stepId = 'tour-step-' + this.tourName + '-' + stepConfig.stepNumber;\n        this.currentStepNode.attr('id', stepId);\n\n        let bodyRegion = this.currentStepNode.find('[data-placeholder=\"body\"]').first();\n        bodyRegion.attr('id', stepId + '-body');\n        bodyRegion.attr('role', 'document');\n\n        let headerRegion = this.currentStepNode.find('[data-placeholder=\"title\"]').first();\n        headerRegion.attr('id', stepId + '-title');\n        headerRegion.attr('aria-labelledby', stepId + '-body');\n\n        // Generally, a modal dialog has a role of dialog.\n        this.currentStepNode.attr('role', 'dialog');\n        this.currentStepNode.attr('tabindex', 0);\n        this.currentStepNode.attr('aria-labelledby', stepId + '-title');\n        this.currentStepNode.attr('aria-describedby', stepId + '-body');\n\n        // Configure ARIA attributes on the target.\n        let target = this.getStepTarget(stepConfig);\n        if (target) {\n            if (!target.attr('tabindex')) {\n                target.attr('tabindex', 0);\n            }\n\n            target\n                .data('original-describedby', target.attr('aria-describedby'))\n                .attr('aria-describedby', stepId + '-body')\n                ;\n        }\n\n        this.accessibilityShow(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Handle key down events.\n     *\n     * @method  handleKeyDown\n     * @param   {EventFacade} e\n     */\n    handleKeyDown(e) {\n        let tabbableSelector = 'a[href], link[href], [draggable=true], [contenteditable=true], ';\n        tabbableSelector += ':input:enabled, [tabindex], button:enabled';\n        switch (e.keyCode) {\n            case 27:\n                this.endTour();\n                break;\n\n            // 9 == Tab - trap focus for items with a backdrop.\n            case 9:\n                // Tab must be handled on key up only in this instance.\n                (function() {\n                    if (!this.currentStepConfig.hasBackdrop) {\n                        // Trapping tab focus is only handled for those steps with a backdrop.\n                        return;\n                    }\n\n                    // Find all tabbable locations.\n                    let activeElement = $(document.activeElement);\n                    let stepTarget = this.getStepTarget(this.currentStepConfig);\n                    let tabbableNodes = $(tabbableSelector);\n                    let dialogContainer = $('span[data-flexitour=\"container\"]');\n                    let currentIndex;\n                    // Filter out element which is not belong to target section or dialogue.\n                    if (stepTarget) {\n                        tabbableNodes = tabbableNodes.filter(function(index, element) {\n                            return stepTarget !== null\n                                && (stepTarget.has(element).length\n                                    || dialogContainer.has(element).length\n                                    || stepTarget.is(element)\n                                    || dialogContainer.is(element));\n                        });\n                    }\n\n                    // Find index of focusing element.\n                    tabbableNodes.each(function(index, element) {\n                        if (activeElement.is(element)) {\n                            currentIndex = index;\n                            return false;\n                        }\n                        // Keep looping.\n                        return true;\n                    });\n\n                    let nextIndex;\n                    let nextNode;\n                    let focusRelevant;\n                    if (currentIndex != void 0) {\n                        let direction = 1;\n                        if (e.shiftKey) {\n                            direction = -1;\n                        }\n                        nextIndex = currentIndex;\n                        do {\n                            nextIndex += direction;\n                            nextNode = $(tabbableNodes[nextIndex]);\n                        } while (nextNode.length && nextNode.is(':disabled') || nextNode.is(':hidden'));\n                        if (nextNode.length) {\n                            // A new f\n                            focusRelevant = nextNode.closest(stepTarget).length;\n                            focusRelevant = focusRelevant || nextNode.closest(this.currentStepNode).length;\n                        } else {\n                            // Unable to find the target somehow.\n                            focusRelevant = false;\n                        }\n                    }\n\n                    if (focusRelevant) {\n                        nextNode.focus();\n                    } else {\n                        if (e.shiftKey) {\n                            // Focus on the last tabbable node in the step.\n                            this.currentStepNode.find(tabbableSelector).last().focus();\n                        } else {\n                            if (this.currentStepConfig.isOrphan) {\n                                // Focus on the step - there is no target.\n                                this.currentStepNode.focus();\n                            } else {\n                                // Focus on the step target.\n                                stepTarget.focus();\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                }).call(this);\n                break;\n        }\n    }\n\n    /**\n     * Start the current tour.\n     *\n     * @method  startTour\n     * @param   {Integer}   startAt     Which step number to start at. If not specified, starts at the last point.\n     * @chainable\n     * @return {Object} this.\n     */\n    startTour(startAt) {\n        if (this.storage && typeof startAt === 'undefined') {\n            let storageStartValue = this.storage.getItem(this.storageKey);\n            if (storageStartValue) {\n                let storageStartAt = parseInt(storageStartValue, 10);\n                if (storageStartAt <= this.steps.length) {\n                    startAt = storageStartAt;\n                }\n            }\n        }\n\n        if (typeof startAt === 'undefined') {\n            startAt = this.getCurrentStepNumber();\n        }\n\n        this.fireEventHandlers('beforeStart', startAt);\n        this.gotoStep(startAt);\n        this.fireEventHandlers('afterStart', startAt);\n\n        return this;\n    }\n\n    /**\n     * Restart the tour from the beginning, resetting the completionlag.\n     *\n     * @method  restartTour\n     * @chainable\n     * @return {Object} this.\n     */\n    restartTour() {\n        return this.startTour(0);\n    }\n\n    /**\n     * End the current tour.\n     *\n     * @method  endTour\n     * @chainable\n     * @return {Object} this.\n     */\n    endTour() {\n        this.fireEventHandlers('beforeEnd');\n\n        if (this.currentStepConfig) {\n            let previousTarget = this.getStepTarget(this.currentStepConfig);\n            if (previousTarget) {\n                if (!previousTarget.attr('tabindex')) {\n                    previousTarget.attr('tabindex', '-1');\n                }\n                previousTarget.focus();\n            }\n        }\n\n        this.hide(true);\n\n        this.fireEventHandlers('afterEnd');\n\n        return this;\n    }\n\n    /**\n     * Hide any currently visible steps.\n     *\n     * @method hide\n     * @param {Bool} transition Animate the visibility change\n     * @chainable\n     * @return {Object} this.\n     */\n    hide(transition) {\n        this.fireEventHandlers('beforeHide');\n\n        if (this.currentStepNode && this.currentStepNode.length) {\n            this.currentStepNode.hide();\n            if (this.currentStepPopper) {\n                this.currentStepPopper.destroy();\n            }\n        }\n\n        // Restore original target configuration.\n        if (this.currentStepConfig) {\n            let target = this.getStepTarget(this.currentStepConfig);\n            if (target) {\n                if (target.data('original-labelledby')) {\n                    target.attr('aria-labelledby', target.data('original-labelledby'));\n                }\n\n                if (target.data('original-describedby')) {\n                    target.attr('aria-describedby', target.data('original-describedby'));\n                }\n\n                if (target.data('original-tabindex')) {\n                    target.attr('tabindex', target.data('tabindex'));\n                }\n            }\n\n            // Clear the step configuration.\n            this.currentStepConfig = null;\n        }\n\n        let fadeTime = 0;\n        if (transition) {\n            fadeTime = 400;\n        }\n\n        // Remove the backdrop features.\n        $('[data-flexitour=\"step-background\"]').remove();\n        $('[data-flexitour=\"step-backdrop\"]').removeAttr('data-flexitour');\n        $('[data-flexitour=\"backdrop\"]').fadeOut(fadeTime, function() {\n            $(this).remove();\n        });\n\n        // Remove aria-describedby and tabindex attributes.\n        if (this.currentStepNode && this.currentStepNode.length) {\n            let stepId = this.currentStepNode.attr('id');\n            if (stepId) {\n                let currentStepElement = '[aria-describedby=\"' + stepId + '-body\"]';\n                $(currentStepElement).removeAttr('tabindex');\n                $(currentStepElement).removeAttr('aria-describedby');\n            }\n        }\n\n        // Reset the listeners.\n        this.resetStepListeners();\n\n        this.accessibilityHide();\n\n        this.fireEventHandlers('afterHide');\n\n        this.currentStepNode = null;\n        this.currentStepPopper = null;\n        return this;\n    }\n\n    /**\n     * Show the current steps.\n     *\n     * @method show\n     * @chainable\n     * @return {Object} this.\n     */\n    show() {\n        // Show the current step.\n        let startAt = this.getCurrentStepNumber();\n\n        return this.gotoStep(startAt);\n    }\n\n    /**\n     * Return the current step node.\n     *\n     * @method  getStepContainer\n     * @return  {jQuery}\n     */\n    getStepContainer() {\n        return $(this.currentStepNode);\n    }\n\n    /**\n     * Calculate scrollTop.\n     *\n     * @method  calculateScrollTop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {Number}\n     */\n    calculateScrollTop(stepConfig) {\n        let scrollTop = $(window).scrollTop();\n        let viewportHeight = $(window).height();\n        let targetNode = this.getStepTarget(stepConfig);\n\n        if (stepConfig.placement === 'top') {\n            // If the placement is top, center scroll at the top of the target.\n            scrollTop = targetNode.offset().top - (viewportHeight / 2);\n        } else if (stepConfig.placement === 'bottom') {\n            // If the placement is bottom, center scroll at the bottom of the target.\n            scrollTop = targetNode.offset().top + targetNode.height() - (viewportHeight / 2);\n        } else if (targetNode.height() <= (viewportHeight * 0.8)) {\n            // If the placement is left/right, and the target fits in the viewport, centre screen on the target\n            scrollTop = targetNode.offset().top - ((viewportHeight - targetNode.height()) / 2);\n        } else {\n            // If the placement is left/right, and the target is bigger than the viewport, set scrollTop to target.top + buffer\n            // and change step attachmentTarget to top+.\n            scrollTop = targetNode.offset().top - (viewportHeight * 0.2);\n        }\n\n        // Never scroll over the top.\n        scrollTop = Math.max(0, scrollTop);\n\n        // Never scroll beyond the bottom.\n        scrollTop = Math.min($(document).height() - viewportHeight, scrollTop);\n\n        return Math.ceil(scrollTop);\n    }\n\n    /**\n     * Calculate dialogue position for page middle.\n     *\n     * @method  calculateScrollTop\n     * @return  {Number}\n     */\n    calculateStepPositionInPage() {\n        let viewportHeight = $(window).height();\n        let stepHeight = this.currentStepNode.height();\n\n        let viewportWidth = $(window).width();\n        let stepWidth = this.currentStepNode.width();\n\n        return {\n            top: Math.ceil((viewportHeight - stepHeight) / 2),\n            left: Math.ceil((viewportWidth - stepWidth) / 2)\n        };\n    }\n\n    /**\n     * Position the step on the page.\n     *\n     * @method  positionStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionStep(stepConfig) {\n        let content = this.currentStepNode;\n        if (!content || !content.length) {\n            // Unable to find the step node.\n            return this;\n        }\n\n        stepConfig.placement = this.recalculatePlacement(stepConfig);\n        let flipBehavior;\n        switch (stepConfig.placement) {\n            case 'left':\n                flipBehavior = ['left', 'right', 'top', 'bottom'];\n                break;\n            case 'right':\n                flipBehavior = ['right', 'left', 'top', 'bottom'];\n                break;\n            case 'top':\n                flipBehavior = ['top', 'bottom', 'right', 'left'];\n                break;\n            case 'bottom':\n                flipBehavior = ['bottom', 'top', 'right', 'left'];\n                break;\n            default:\n                flipBehavior = 'flip';\n                break;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        var config = {\n            placement: stepConfig.placement + '-start',\n            removeOnDestroy: true,\n            modifiers: {\n                flip: {\n                    behaviour: flipBehavior,\n                },\n                arrow: {\n                    element: '[data-role=\"arrow\"]',\n                },\n            },\n            onCreate: function(data) {\n                recalculateArrowPosition(data);\n            },\n            onUpdate: function(data) {\n                recalculateArrowPosition(data);\n            },\n        };\n\n        let recalculateArrowPosition = function(data) {\n            let placement = data.placement.split('-')[0];\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n            const arrowElement = data.instance.popper.querySelector('[data-role=\"arrow\"]');\n            const stepElement = $(data.instance.popper.querySelector('[data-role=\"flexitour-step\"]'));\n            if (isVertical) {\n                let arrowHeight = parseFloat(window.getComputedStyle(arrowElement).height);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).top);\n                let popperHeight = parseFloat(window.getComputedStyle(data.instance.popper).height);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).top);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowHeight / 2);\n                let maxPos = popperHeight + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperHeight / 2)) {\n                        newArrowPos = maxPos - arrowHeight;\n                    } else {\n                        newArrowPos = minPos + arrowHeight;\n                    }\n                    $(arrowElement).css('top', newArrowPos);\n                }\n            } else {\n                let arrowWidth = parseFloat(window.getComputedStyle(arrowElement).width);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).left);\n                let popperWidth = parseFloat(window.getComputedStyle(data.instance.popper).width);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).left);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowWidth / 2);\n                let maxPos = popperWidth + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperWidth / 2)) {\n                        newArrowPos = maxPos - arrowWidth;\n                    } else {\n                        newArrowPos = minPos + arrowWidth;\n                    }\n                    $(arrowElement).css('left', newArrowPos);\n                }\n            }\n        };\n\n        let background = $('[data-flexitour=\"step-background\"]');\n        if (background.length) {\n            target = background;\n        }\n        this.currentStepPopper = new Popper(target, content[0], config);\n\n        return this;\n    }\n\n    /**\n     * For left/right placement, checks that there is room for the step at current window size.\n     *\n     * If there is not enough room, changes placement to 'top'.\n     *\n     * @method  recalculatePlacement\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {String}                    The placement after recalculate\n     */\n    recalculatePlacement(stepConfig) {\n        const buffer = 10;\n        const arrowWidth = 16;\n        let target = this.getStepTarget(stepConfig);\n        let widthContent = this.currentStepNode.width() + arrowWidth;\n        let targetOffsetLeft = target.offset().left - buffer;\n        let targetOffsetRight = target.offset().left + target.width() + buffer;\n        let placement = stepConfig.placement;\n\n        if (['left', 'right'].indexOf(placement) !== -1) {\n            if ((targetOffsetLeft < (widthContent + buffer)) &&\n                ((targetOffsetRight + widthContent + buffer) > document.documentElement.clientWidth)) {\n                placement = 'top';\n            }\n        }\n        return placement;\n    }\n\n    /**\n     * Add the backdrop.\n     *\n     * @method  positionBackdrop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionBackdrop(stepConfig) {\n        if (stepConfig.backdrop) {\n            this.currentStepConfig.hasBackdrop = true;\n            let backdrop = $('<div data-flexitour=\"backdrop\"></div>');\n\n            if (stepConfig.zIndex) {\n                if (stepConfig.attachPoint === 'append') {\n                    stepConfig.attachTo.append(backdrop);\n                } else {\n                    backdrop.insertAfter(stepConfig.attachTo);\n                }\n            } else {\n                $('body').append(backdrop);\n            }\n\n            if (this.isStepActuallyVisible(stepConfig)) {\n                // The step has a visible target.\n                // Punch a hole through the backdrop.\n                let background = $('<div data-flexitour=\"step-background\"></div>');\n\n                let targetNode = this.getStepTarget(stepConfig);\n\n                let buffer = 10;\n\n                let colorNode = targetNode;\n                if (buffer) {\n                    colorNode = $('body');\n                }\n\n                background.css({\n                    width: targetNode.outerWidth() + buffer + buffer,\n                    height: targetNode.outerHeight() + buffer + buffer,\n                    left: targetNode.offset().left - buffer,\n                    top: targetNode.offset().top - buffer,\n                    backgroundColor: this.calculateInherittedBackgroundColor(colorNode),\n                });\n\n                if (targetNode.offset().left < buffer) {\n                    background.css({\n                        width: targetNode.outerWidth() + targetNode.offset().left + buffer,\n                        left: targetNode.offset().left,\n                    });\n                }\n\n                if (targetNode.offset().top < buffer) {\n                    background.css({\n                        height: targetNode.outerHeight() + targetNode.offset().top + buffer,\n                        top: targetNode.offset().top,\n                    });\n                }\n\n                let targetRadius = targetNode.css('borderRadius');\n                if (targetRadius && targetRadius !== $('body').css('borderRadius')) {\n                    background.css('borderRadius', targetRadius);\n                }\n\n                let targetPosition = this.calculatePosition(targetNode);\n                if (targetPosition === 'fixed') {\n                    background.css('top', 0);\n                } else if (targetPosition === 'absolute') {\n                    background.css('position', 'fixed');\n                }\n\n                let fader = background.clone();\n                fader.css({\n                    backgroundColor: backdrop.css('backgroundColor'),\n                    opacity: backdrop.css('opacity'),\n                });\n                fader.attr('data-flexitour', 'step-background-fader');\n\n                if (stepConfig.zIndex) {\n                    if (stepConfig.attachPoint === 'append') {\n                        stepConfig.attachTo.append(background);\n                    } else {\n                        fader.insertAfter(stepConfig.attachTo);\n                        background.insertAfter(stepConfig.attachTo);\n                    }\n                } else {\n                    $('body').append(fader);\n                    $('body').append(background);\n                }\n\n                // Add the backdrop data to the actual target.\n                // This is the part which actually does the work.\n                targetNode.attr('data-flexitour', 'step-backdrop');\n\n                if (stepConfig.zIndex) {\n                    backdrop.css('zIndex', stepConfig.zIndex);\n                    background.css('zIndex', stepConfig.zIndex + 1);\n                    targetNode.css('zIndex', stepConfig.zIndex + 2);\n                }\n\n                fader.fadeOut('2000', function() {\n                    $(this).remove();\n                });\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Calculate the inheritted z-index.\n     *\n     * @method  calculateZIndex\n     * @param   {jQuery}    elem                        The element to calculate z-index for\n     * @return  {Number}                                Calculated z-index\n     */\n    calculateZIndex(elem) {\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            // Ignore z-index if position is set to a value where z-index is ignored by the browser\n            // This makes behavior of this function consistent across browsers\n            // WebKit always returns auto if the element is positioned.\n            let position = elem.css(\"position\");\n            if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\n                // IE returns 0 when zIndex is not specified\n                // other browsers return a string\n                // we ignore the case of nested elements with an explicit value of 0\n                // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n                let value = parseInt(elem.css(\"zIndex\"), 10);\n                if (!isNaN(value) && value !== 0) {\n                    return value;\n                }\n            }\n            elem = elem.parent();\n        }\n\n        return 0;\n    }\n\n    /**\n     * Calculate the inheritted background colour.\n     *\n     * @method  calculateInherittedBackgroundColor\n     * @param   {jQuery}    elem                        The element to calculate colour for\n     * @return  {String}                                Calculated background colour\n     */\n    calculateInherittedBackgroundColor(elem) {\n        // Use a fake node to compare each element against.\n        let fakeNode = $('<div>').hide();\n        $('body').append(fakeNode);\n        let fakeElemColor = fakeNode.css('backgroundColor');\n        fakeNode.remove();\n\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            let color = elem.css('backgroundColor');\n            if (color !== fakeElemColor) {\n                return color;\n            }\n            elem = elem.parent();\n        }\n\n        return null;\n    }\n\n    /**\n     * Calculate the inheritted position.\n     *\n     * @method  calculatePosition\n     * @param   {jQuery}    elem                        The element to calculate position for\n     * @return  {String}                                Calculated position\n     */\n    calculatePosition(elem) {\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            let position = elem.css('position');\n            if (position !== 'static') {\n                return position;\n            }\n            elem = elem.parent();\n        }\n\n        return null;\n    }\n\n    /**\n     * Perform accessibility changes for step shown.\n     *\n     * This will add aria-hidden=\"true\" to all siblings and parent siblings.\n     *\n     * @method  accessibilityShow\n     */\n    accessibilityShow() {\n        let stateHolder = 'data-has-hidden';\n        let attrName = 'aria-hidden';\n        let hideFunction = function(child) {\n            let flexitourRole = child.data('flexitour');\n            if (flexitourRole) {\n                switch (flexitourRole) {\n                    case 'container':\n                    case 'target':\n                        return;\n                }\n            }\n\n            let hidden = child.attr(attrName);\n            if (!hidden) {\n                child.attr(stateHolder, true);\n                Aria.hide(child);\n            }\n        };\n\n        this.currentStepNode.siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n        this.currentStepNode.parentsUntil('body').siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n    }\n\n    /**\n     * Perform accessibility changes for step hidden.\n     *\n     * This will remove any newly added aria-hidden=\"true\".\n     *\n     * @method  accessibilityHide\n     */\n    accessibilityHide() {\n        let stateHolder = 'data-has-hidden';\n        let showFunction = function(child) {\n            let hidden = child.attr(stateHolder);\n            if (typeof hidden !== 'undefined') {\n                child.removeAttr(stateHolder);\n                Aria.unhide(child);\n            }\n        };\n\n        $('[' + stateHolder + ']').each(function(index, node) {\n            showFunction($(node));\n        });\n    }\n}\n"],"names":["_jquery","_interopRequireDefault","Aria","_interopRequireWildcard","_popper","Tour","config","_classCallCheck","this","init","value","eventHandlers","reset","originalConfiguration","configure","apply","arguments","storage","window","sessionStorage","storageKey","tourName","e","hide","resetStepListeners","steps","currentStepNumber","_this","_typeof","_loop","eventName","forEach","handler","addEventHandler","resetStepDefaults","template","templateContent","checkMinimumRequirements","Error","length","loadOriginalConfiguration","stepDefaults","setStepDefaults","$","extend","element","placement","delay","moveOnClick","moveAfterTime","orphan","direction","parseInt","stepNumber","setItem","code","DOMException","QUOTA_EXCEEDED_ERR","removeItem","getCurrentStepNumber","nextStepNumber","isStepPotentiallyVisible","getStepConfig","previousStepNumber","getNextStepNumber","getPreviousStepNumber","stepConfig","isStepActuallyVisible","target","getStepTarget","is","gotoStep","endTour","_gotoStep","delayed","setTimeout","bind","fn","fireEventHandlers","renderStep","normalizeStepConfig","reflex","moveAfterClick","content","body","attachTo","attachPoint","default","first","data","thisEvent","call","push","listeners","node","currentStepNode","args","proxy","next","previous","handleKeyDown","targetNode","parents","listener","on","off","currentStepConfig","setCurrentStepNumber","getTemplateContent","find","html","title","isFirstStep","prop","isLastStep","removeClass","addClass","attr","addStepToPage","processStepListeners","clone","animationTarget","stop","zIndex","calculateZIndex","css","positionBackdrop","document","append","top","left","animate","scrollTop","calculateScrollTop","promise","then","positionStep","revealStep","catch","isOrphan","offset","calculateStepPositionInPage","currentStepPopper","Popper","removeOnDestroy","arrowElement","modifiers","enabled","applyStyle","onLoad","fadeIn","announceStep","focus","stepId","bodyRegion","headerRegion","accessibilityShow","tabbableSelector","keyCode","hasBackdrop","currentIndex","nextIndex","nextNode","focusRelevant","activeElement","stepTarget","tabbableNodes","dialogContainer","filter","index","has","each","shiftKey","closest","last","preventDefault","startAt","storageStartValue","getItem","storageStartAt","startTour","previousTarget","transition","destroy","fadeTime","remove","removeAttr","fadeOut","currentStepElement","accessibilityHide","viewportHeight","height","Math","max","min","ceil","stepHeight","viewportWidth","width","stepWidth","flipBehavior","recalculatePlacement","flip","behaviour","arrow","onCreate","recalculateArrowPosition","onUpdate","split","isVertical","indexOf","instance","popper","querySelector","stepElement","arrowHeight","parseFloat","getComputedStyle","arrowOffset","popperHeight","popperOffset","popperBorderWidth","popperBorderRadiusWidth","arrowPos","maxPos","minPos","newArrowPos","arrowWidth","popperWidth","background","buffer","widthContent","targetOffsetLeft","targetOffsetRight","documentElement","clientWidth","backdrop","insertAfter","colorNode","outerWidth","outerHeight","backgroundColor","calculateInherittedBackgroundColor","targetRadius","targetPosition","calculatePosition","fader","opacity","elem","position","isNaN","parent","fakeNode","fakeElemColor","color","stateHolder","hideFunction","child","flexitourRole","siblings","parentsUntil","unhide"],"mappings":"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"}
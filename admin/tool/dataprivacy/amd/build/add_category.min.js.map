{"version":3,"file":"add_category.min.js","sources":["../src/add_category.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to add categories.\n *\n * @module     tool_dataprivacy/add_category\n * @copyright  2018 David Monllao\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/fragment'],\n    function($, Str, Ajax, Notification, ModalFactory, ModalEvents, Fragment) {\n\n        var SELECTORS = {\n            CATEGORY_LINK: '[data-add-element=\"category\"]',\n        };\n\n        var AddCategory = function(contextId) {\n            this.contextId = contextId;\n\n            var stringKeys = [\n                {\n                    key: 'addcategory',\n                    component: 'tool_dataprivacy'\n                },\n                {\n                    key: 'save',\n                    component: 'admin'\n                }\n            ];\n            this.strings = Str.get_strings(stringKeys);\n\n            this.registerEventListeners();\n        };\n\n        /**\n         * @var {int} contextId\n         * @private\n         */\n        AddCategory.prototype.contextId = 0;\n\n        /**\n         * @var {Promise}\n         * @private\n         */\n        AddCategory.prototype.strings = 0;\n\n        AddCategory.prototype.registerEventListeners = function() {\n\n            var trigger = $(SELECTORS.CATEGORY_LINK);\n            trigger.on('click', function() {\n                return this.strings.then(function(strings) {\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: strings[0],\n                        body: '',\n                    }, trigger).done(function(modal) {\n                        this.setupFormModal(modal, strings[1]);\n                    }.bind(this));\n                }.bind(this))\n                .fail(Notification.exception);\n            }.bind(this));\n\n        };\n\n        /**\n         * @method getBody\n         * @param {Object} formdata\n         * @private\n         * @return {Promise}\n         */\n        AddCategory.prototype.getBody = function(formdata) {\n\n            var params = null;\n            if (typeof formdata !== \"undefined\") {\n                params = {jsonformdata: JSON.stringify(formdata)};\n            }\n            // Get the content of the modal.\n            return Fragment.loadFragment('tool_dataprivacy', 'addcategory_form', this.contextId, params);\n        };\n\n        AddCategory.prototype.setupFormModal = function(modal, saveText) {\n            modal.setLarge();\n\n            modal.setSaveButtonText(saveText);\n\n            // We want to reset the form every time it is opened.\n            modal.getRoot().on(ModalEvents.hidden, this.destroy.bind(this));\n\n            modal.setBody(this.getBody());\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n            // We also catch the form submit event and use it to submit the form with ajax.\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n            this.modal = modal;\n\n            modal.show();\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        AddCategory.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        AddCategory.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            Ajax.call([{\n                methodname: 'tool_dataprivacy_create_category_form',\n                args: {jsonformdata: JSON.stringify(formData)},\n                done: function(data) {\n                    if (data.validationerrors) {\n                        this.modal.setBody(this.getBody(formData));\n                    } else {\n                        this.close();\n                    }\n                }.bind(this),\n                fail: Notification.exception\n            }]);\n        };\n\n        AddCategory.prototype.close = function() {\n            this.destroy();\n            document.location.reload();\n        };\n\n        AddCategory.prototype.destroy = function() {\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            this.modal.destroy();\n        };\n\n        AddCategory.prototype.removeListeners = function() {\n            $(SELECTORS.CATEGORY_LINK).off('click');\n        };\n\n        return /** @alias module:tool_dataprivacy/add_category */ {\n            getInstance: function(contextId) {\n                return new AddCategory(contextId);\n            }\n        };\n    }\n);\n\n"],"names":["define","$","Str","Ajax","Notification","ModalFactory","ModalEvents","Fragment","SELECTORS","AddCategory","contextId","this","strings","get_strings","key","component","registerEventListeners","prototype","trigger","on","then","create","type","types","SAVE_CANCEL","title","body","done","modal","setupFormModal","bind","fail","exception","getBody","formdata","params","jsonformdata","JSON","stringify","loadFragment","saveText","setLarge","setSaveButtonText","getRoot","hidden","destroy","setBody","save","submitForm","submitFormAjax","show","e","preventDefault","find","submit","formData","serialize","call","methodname","args","data","validationerrors","close","document","location","reload","Y","use","M","core_formchangechecker","reset_form_dirty_state","removeListeners","off","getInstance"],"mappings":";;;;;;;AAsBAA,OAAO,gCAAA,CAAC,SAAU,WAAY,YAAa,oBAAqB,qBAAsB,oBAAqB,kBACvG,SAASC,EAAGC,IAAKC,KAAMC,aAAcC,aAAcC,YAAaC,UAE5D,IAAIC,wBACe,gCAGfC,YAAc,SAASC,WAClBA,KAAAA,UAAYA,UAYjBC,KAAKC,QAAUV,IAAIW,YAVF,CACb,CACIC,IAAK,cACLC,UAAW,oBAEf,CACID,IAAK,OACLC,UAAW,WAKnBJ,KAAKK,wBACR,EAsHyD,OAhH1DP,YAAYQ,UAAUP,UAAY,EAMlCD,YAAYQ,UAAUL,QAAU,EAEhCH,YAAYQ,UAAUD,uBAAyB,WAE3C,IAAIE,QAAUjB,EAAEO,yBAChBU,QAAQC,GAAG,QAAS,WAChB,OAAOR,KAAKC,QAAQQ,KAAK,SAASR,SAC9BP,aAAagB,OAAO,CAChBC,KAAMjB,aAAakB,MAAMC,YACzBC,MAAOb,QAAQ,GACfc,KAAM,IACPR,SAASS,KAAK,SAASC,OACtBjB,KAAKkB,eAAeD,MAAOhB,QAAQ,GACtC,EAACkB,KAAKnB,MACV,EAACmB,KAAKnB,OACNoB,KAAK3B,aAAa4B,UACtB,EAACF,KAAKnB,MAEV,EAQDF,YAAYQ,UAAUgB,QAAU,SAASC,UAEjCC,IAAAA,OAAS,KAKb,YAJwB,IAAbD,WACPC,OAAS,CAACC,aAAcC,KAAKC,UAAUJ,YAGpC3B,SAASgC,aAAa,mBAAoB,mBAAoB5B,KAAKD,UAAWyB,OACxF,EAED1B,YAAYQ,UAAUY,eAAiB,SAASD,MAAOY,UACnDZ,MAAMa,WAENb,MAAMc,kBAAkBF,UAGxBZ,MAAMe,UAAUxB,GAAGb,YAAYsC,OAAQjC,KAAKkC,QAAQf,KAAKnB,OAEzDiB,MAAMkB,QAAQnC,KAAKsB,WAInBL,MAAMe,UAAUxB,GAAGb,YAAYyC,KAAMpC,KAAKqC,WAAWlB,KAAKnB,OAE1DiB,MAAMe,UAAUxB,GAAG,SAAU,OAAQR,KAAKsC,eAAenB,KAAKnB,OAEzDiB,KAAAA,MAAQA,MAEbA,MAAMsB,MACT,EASDzC,YAAYQ,UAAU+B,WAAa,SAASG,GACxCA,EAAEC,iBACGxB,KAAAA,MAAMe,UAAUU,KAAK,QAAQC,QACrC,EAED7C,YAAYQ,UAAUgC,eAAiB,SAASE,GAE5CA,EAAEC,iBAGF,IAAIG,SAAW5C,KAAKiB,MAAMe,UAAUU,KAAK,QAAQG,YAEjDrD,KAAKsD,KAAK,CAAC,CACPC,WAAY,wCACZC,KAAM,CAACvB,aAAcC,KAAKC,UAAUiB,WACpC5B,KAAM,SAASiC,MACPA,KAAKC,iBACAjC,KAAAA,MAAMkB,QAAQnC,KAAKsB,QAAQsB,WAEhC5C,KAAKmD,OAEZ,EAAChC,KAAKnB,MACPoB,KAAM3B,aAAa4B,YAE1B,EAEDvB,YAAYQ,UAAU6C,MAAQ,WAC1BnD,KAAKkC,UACLkB,SAASC,SAASC,QACrB,EAEDxD,YAAYQ,UAAU4B,QAAU,WAC5BqB,EAAEC,IAAI,iCAAiC,WACnCC,EAAEC,uBAAuBC,wBAC5B,IACI1C,KAAAA,MAAMiB,SACd,EAEDpC,YAAYQ,UAAUsD,gBAAkB,WACpCtE,EAAEO,yBAAyBgE,IAAI,QAClC,EAEyD,CACtDC,YAAa,SAAS/D,WAClB,OAAO,IAAID,YAAYC,UAC1B,EAER"}
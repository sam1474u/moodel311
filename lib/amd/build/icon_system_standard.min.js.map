{"version":3,"file":"icon_system_standard.min.js","sources":["../src/icon_system_standard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule points module.\n *\n * @module core/icon_system_standard\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/icon_system', 'core/url', 'core/mustache'],\n        function(IconSystem, CoreUrl, Mustache) {\n\n    /**\n     * IconSystemStandard\n     *\n     * @class core/icon_system_standard\n     */\n    var IconSystemStandard = function() {\n        IconSystem.apply(this, arguments);\n    };\n    IconSystemStandard.prototype = Object.create(IconSystem.prototype);\n\n    /**\n     * Render an icon.\n     *\n     * @method renderIcon\n     * @param {String} key\n     * @param {String} component\n     * @param {String} title\n     * @param {String} template\n     * @return {String}\n     */\n    IconSystemStandard.prototype.renderIcon = function(key, component, title, template) {\n        var url = CoreUrl.imageUrl(key, component);\n\n        var templatecontext = {\n            attributes: [\n                {name: 'src', value: url},\n                {name: 'alt', value: title},\n                {name: 'title', value: title}\n            ]\n        };\n        if (typeof title === \"undefined\" || title == \"\") {\n            templatecontext.attributes.push({name: 'aria-hidden', value: 'true'});\n        }\n\n        var result = Mustache.render(template, templatecontext);\n        return result.trim();\n    };\n\n    /**\n     * Get the name of the template to pre-cache for this icon system.\n     *\n     * @return {String}\n     * @method getTemplateName\n     */\n    IconSystemStandard.prototype.getTemplateName = function() {\n        return 'core/pix_icon';\n    };\n\n    return IconSystemStandard;\n});\n"],"names":["define","IconSystem","CoreUrl","Mustache","IconSystemStandard","apply","this","arguments","prototype","Object","create","renderIcon","key","component","title","template","url","templatecontext","attributes","name","value","imageUrl","result","push","render","trim","getTemplateName"],"mappings":";;;;;;;AAuBAA,OAAO,4BAAA,CAAC,mBAAoB,WAAY,kBAChC,SAASC,WAAYC,QAASC,UAOlC,IAAIC,mBAAqB,WACrBH,WAAWI,MAAMC,KAAMC,UAC1B,EAyCD,OAxCAH,mBAAmBI,UAAYC,OAAOC,OAAOT,WAAWO,YAY3BG,WAAa,SAASC,IAAKC,UAAWC,MAAOC,UAClEC,IAEAC,gBAAkB,CAClBC,WAAY,CACR,CAACC,KAAM,MAAOC,MAJZlB,QAAQmB,SAAST,IAAKC,YAKxB,CAACM,KAAM,MAAOC,MAAON,OACrB,CAACK,KAAM,QAASC,MAAON,SAQxBQ,YALc,IAAVR,OAAkC,IAATA,OAChCG,gBAAgBC,WAAWK,KAAK,CAACJ,KAAM,cAAeC,MAAO,SAGpDjB,SAASqB,OAAOT,SAAUE,iBACzBQ,MACjB,EAQDrB,mBAAmBI,UAAUkB,gBAAkB,WAC3C,MAAO,eACV,EAEMtB,kBACV"}
{"version":3,"file":"toast.min.js","sources":["../src/toast.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A system for displaying small snackbar notifications to users which disappear shortly after they are shown.\n *\n * @module     core/toast\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n * Add a new region to place toasts in, taking in a parent element.\n *\n * @method\n * @param {HTMLElement} parent\n */\nexport const addToastRegion = async(parent) => {\n    const pendingPromise = new Pending('addToastRegion');\n\n    try {\n        const {html, js} = await Templates.renderForPromise('core/local/toast/wrapper', {});\n        Templates.prependNodeContents(parent, html, js);\n    } catch (e) {\n        Notification.exception(e);\n    }\n\n    pendingPromise.resolve();\n};\n\n/**\n * Add a new toast or snackbar notification to the page.\n *\n * @method\n * @param {String} message\n * @param {Object} configuration\n * @param {String} [configuration.title]\n * @param {String} [configuration.subtitle]\n * @param {String} [configuration.type] Optional type of the toast notification ('success', 'info', 'warning' or 'danger')\n * @param {Boolean} [configuration.autohide=true]\n * @param {Boolean} [configuration.closeButton=false]\n * @param {Number} [configuration.delay=4000]\n *\n * @example\n * import {add as addToast} from 'core/toast';\n * import {get_string as getString} from 'core/str';\n *\n * getString('example', 'mod_myexample')\n * .then(str => {\n *     addToast(str, {\n *         type: 'warning',\n *         autohide: false,\n *         closeButton: true,\n *     });\n *     return;\n * })\n * .catch();\n */\nexport const add = async(message, configuration) => {\n    const pendingPromise = new Pending('addToastRegion');\n    configuration = {\n        closeButton: false,\n        autohide: true,\n        delay: 4000,\n        ...configuration,\n    };\n\n    const templateName = `core/local/toast/message`;\n    try {\n        const targetNode = await getTargetNode();\n        const {html, js} = await Templates.renderForPromise(templateName, {\n            message,\n            ...configuration\n        });\n        Templates.prependNodeContents(targetNode, html, js);\n    } catch (e) {\n        Notification.exception(e);\n    }\n\n    pendingPromise.resolve();\n};\n\nconst getTargetNode = async() => {\n    const regions = document.querySelectorAll('.toast-wrapper');\n\n    if (regions.length) {\n        return regions[regions.length - 1];\n    }\n\n    await addToastRegion(document.body, 'fixed-bottom');\n    return getTargetNode();\n};\n"],"names":["_templates","_interopRequireDefault","_notification","_pending","_ref","addToastRegion","_asyncToGenerator","regeneratorRuntime","mark","parent","pendingPromise","_yield$Templates$rend","html","js","wrap","_context","prev","next","Pending","default","Templates","renderForPromise","sent","prependNodeContents","t0","Notification","exception","resolve","stop","_callee","_x","apply","this","arguments","_ref2","add","_callee2","message","configuration","templateName","targetNode","_yield$Templates$rend2","_context2","_objectSpread","closeButton","autohide","delay","getTargetNode","_x2","_x3","_ref3","_callee3","regions","_context3","document","querySelectorAll","length","abrupt","body"],"mappings":"wxDAsBAA,WAAAC,uBAAAD,YACAE,cAAAD,uBAAAC,eACAC,SAAAF,uBAAAE,UAQO,IAAoBC,KAAdC,gBAAcD,KAAAE,kBAAAC,mBAAAC,MAAG,iBAAMC,QAAN,IAAAC,eAAAC,sBAAAC,KAAAC,GAAA,OAAAN,mBAAAO,MAAA,SAAAC,UAAA,OAAA,OAAAA,SAAAC,KAAAD,SAAAE,MAAA,KAAA,EAAA,OACpBP,eAAiB,IAAIQ,SAAJC,QAAY,kBADTJ,SAAAC,KAAA,EAAAD,SAAAE,KAAA,EAIGG,mBAAUC,iBAAiB,2BAA4B,CAAvD,GAJH,KAAA,EAAAV,sBAAAI,SAAAO,KAIfV,2BAAAA,KAAMC,yBAAAA,GACbO,WAAAA,QAAUG,oBAAoBd,OAAQG,KAAMC,IALtBE,SAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,SAAAC,KAAA,GAAAD,SAAAS,GAAAT,SAAA,MAAA,GAOtBU,cAAAA,QAAaC,UAAbX,SAAAS,IAPsB,KAAA,GAU1Bd,eAAeiB,UAVW,KAAA,GAAA,IAAA,MAAA,OAAAZ,SAAAa,OAAA,GAAAC,QAAA,KAAA,CAAA,CAAA,EAAA,KAAH,KAAA,SAAAC,IAAA,OAAA1B,KAAA2B,MAAAC,KAAAC,UAAA,0CAyCpB,IAAYC,MAANC,KAAMD,MAAA5B,kBAAAC,mBAAAC,MAAA,SAAA4B,SAAMC,QAASC,eAAf,IAAA5B,eAAA6B,aAAAC,WAAAC,uBAAA7B,KAAAC,GAAA,OAAAN,mBAAAO,MAAA,SAAA4B,WAAA,OAAA,OAAAA,UAAA1B,KAAA0B,UAAAzB,MAAA,KAAA,EAAA,OACTP,eAAiB,IAAIQ,SAAJC,QAAY,kBACnCmB,cAAaK,cAAA,CACTC,aAAa,EACbC,UAAU,EACVC,MAAO,KACJR,eAGDC,aATS,2BAAAG,UAAA1B,KAAA,EAAA0B,UAAAzB,KAAA,EAWc8B,gBAXd,KAAA,EAYc3B,OADnBoB,WAXKE,UAAApB,KAAAoB,UAAAzB,KAAA,EAYcG,WAAAA,QAAUC,iBAAiBkB,aAA3BI,cAAA,CACrBN,QAAAA,SACGC,gBAdI,KAAA,EAAAG,uBAAAC,UAAApB,KAYJV,4BAAAA,KAAMC,0BAAAA,GAIbO,WAAAA,QAAUG,oBAAoBiB,WAAY5B,KAAMC,IAhBrC6B,UAAAzB,KAAA,GAAA,MAAA,KAAA,GAAAyB,UAAA1B,KAAA,GAAA0B,UAAAlB,GAAAkB,UAAA,MAAA,GAkBXjB,cAAAA,QAAaC,UAAbgB,UAAAlB,IAlBW,KAAA,GAqBfd,eAAeiB,UArBA,KAAA,GAAA,IAAA,MAAA,OAAAe,UAAAd,OAAA,GAAAQ,SAAA,KAAA,CAAA,CAAA,EAAA,KAAH,KAAA,SAAAY,IAAAC,KAAA,OAAAf,MAAAH,MAAAC,KAAAC,UAAA,oBAwBhB,IAAsBiB,MAAhBH,eAAgBG,MAAA5C,kBAAAC,mBAAAC,MAAA,SAAA2C,WAAA,IAAAC,QAAA,OAAA7C,mBAAAO,MAAA,SAAAuC,WAAA,OAAA,OAAAA,UAAArC,KAAAqC,UAAApC,MAAA,KAAA,EAGdmC,KAFEA,QAAUE,SAASC,iBAAiB,mBAE9BC,OAHM,CAAAH,UAAApC,KAAA,EAAA,KAAA,CAAA,OAAAoC,UAAAI,OAAA,SAIPL,QAAQA,QAAQI,OAAS,IAJlB,KAAA,EAAA,OAAAH,UAAApC,KAAA,EAOZZ,eAAeiD,SAASI,KAAM,gBAPlB,KAAA,EAAA,OAAAL,UAAAI,OAAA,SAQXV,iBARW,KAAA,EAAA,IAAA,MAAA,OAAAM,UAAAzB,OAAA,GAAAuB,SAAH,KAAA,WAAA,OAAAD,MAAAnB,MAAAC,KAAAC,UAAA"}
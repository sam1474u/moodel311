{"version":3,"file":"notification.min.js","sources":["../src/notification.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Notification manager for in-page notifications in Moodle.\n *\n * @module     core/notification\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\nimport Pending from 'core/pending';\nimport Log from 'core/log';\n\nlet currentContextId = M.cfg.contextid;\n\nconst notificationTypes = {\n    success:  'core/notification_success',\n    info:     'core/notification_info',\n    warning:  'core/notification_warning',\n    error:    'core/notification_error',\n};\n\nconst notificationRegionId = 'user-notifications';\n\nconst Selectors = {\n    notificationRegion: `#${notificationRegionId}`,\n    fallbackRegionParents: [\n        '#region-main',\n        '[role=\"main\"]',\n        'body',\n    ],\n};\n\nconst setupTargetRegion = () => {\n    let targetRegion = getNotificationRegion();\n    if (targetRegion) {\n        return false;\n    }\n\n    const newRegion = document.createElement('span');\n    newRegion.id = notificationRegionId;\n\n    return Selectors.fallbackRegionParents.some(selector => {\n        const targetRegion = document.querySelector(selector);\n\n        if (targetRegion) {\n            targetRegion.prepend(newRegion);\n            return true;\n        }\n\n        return false;\n    });\n};\n\n/**\n * A notification object displayed to a user.\n *\n * @typedef  {Object} Notification\n * @property {string} message       The body of the notification\n * @property {string} type          The type of notification to add (error, warning, info, success).\n * @property {Boolean} closebutton  Whether to show the close button.\n * @property {Boolean} announce     Whether to announce to screen readers.\n */\n\n/**\n * Poll the server for any new notifications.\n *\n * @method\n * @returns {Promise}\n */\nexport const fetchNotifications = async() => {\n    const Ajax = await import('core/ajax');\n\n    return Ajax.call([{\n        methodname: 'core_fetch_notifications',\n        args: {\n            contextid: currentContextId\n        }\n    }])[0]\n    .then(addNotifications);\n};\n\n/**\n * Add all of the supplied notifications.\n *\n * @method\n * @param {Notification[]} notifications The list of notificaitons\n * @returns {Promise}\n */\nconst addNotifications = notifications => {\n    if (!notifications.length) {\n        return Promise.resolve();\n    }\n\n    const pendingPromise = new Pending('core/notification:addNotifications');\n    notifications.forEach(notification => renderNotification(notification.template, notification.variables));\n\n    return pendingPromise.resolve();\n};\n\n/**\n * Add a notification to the page.\n *\n * Note: This does not cause the notification to be added to the session.\n *\n * @method\n * @param {Notification} notification The notification to add.\n * @returns {Promise}\n */\nexport const addNotification = notification => {\n    const pendingPromise = new Pending('core/notification:addNotifications');\n\n    let template = notificationTypes.error;\n\n    notification = {\n        closebutton:    true,\n        announce:       true,\n        type:           'error',\n        ...notification,\n    };\n\n    if (notification.template) {\n        template = notification.template;\n        delete notification.template;\n    } else if (notification.type) {\n        if (typeof notificationTypes[notification.type] !== 'undefined') {\n            template = notificationTypes[notification.type];\n        }\n        delete notification.type;\n    }\n\n    return renderNotification(template, notification)\n    .then(pendingPromise.resolve);\n};\n\nconst renderNotification = async(template, variables) => {\n    if (typeof variables.message === 'undefined' || !variables.message) {\n        Log.debug('Notification received without content. Skipping.');\n        return;\n    }\n\n    const pendingPromise = new Pending('core/notification:renderNotification');\n    const Templates = await import('core/templates');\n\n    Templates.renderForPromise(template, variables)\n    .then(({html, js = ''}) => {\n        Templates.prependNodeContents(getNotificationRegion(), html, js);\n\n        return;\n    })\n    .then(pendingPromise.resolve)\n    .catch(exception);\n};\n\nconst getNotificationRegion = () => document.querySelector(Selectors.notificationRegion);\n\n/**\n * Alert dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} message\n * @param {String|Promise} cancelText\n * @returns {Promise}\n */\nexport const alert = async(title, message, cancelText) => {\n    var pendingPromise = new Pending('core/notification:alert');\n\n    const ModalFactory = await import('core/modal_factory');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        body: message,\n        title: title,\n        buttons: {\n            cancel: cancelText,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        pendingPromise.resolve();\n        return modal;\n    });\n};\n\n/**\n * The confirm has now been replaced with a save and cancel dialogue.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} noLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @returns {Promise}\n */\nexport const confirm = (title, question, saveLabel, noLabel, saveCallback, cancelCallback) =>\n        saveCancel(title, question, saveLabel, saveCallback, cancelCallback);\n\n/**\n * The Save and Cancel dialogue helper.\n *\n * @method\n * @param {String|Promise} title\n * @param {String|Promise} question\n * @param {String|Promise} saveLabel\n * @param {String|Promise} saveCallback\n * @param {String|Promise} cancelCallback\n * @returns {Promise}\n */\nexport const saveCancel = async(title, question, saveLabel, saveCallback, cancelCallback) => {\n    const pendingPromise = new Pending('core/notification:confirm');\n\n    const [\n        ModalFactory,\n        ModalEvents,\n    ] = await Promise.all([\n        import('core/modal_factory'),\n        import('core/modal_events'),\n    ]);\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: title,\n        body: question,\n        buttons: {\n            // Note: The noLabel is no longer supported.\n            save: saveLabel,\n        },\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n\n        modal.getRoot().on(ModalEvents.save, saveCallback);\n        modal.getRoot().on(ModalEvents.cancel, cancelCallback);\n        pendingPromise.resolve();\n\n        return modal;\n    });\n};\n\n/**\n * Wrap M.core.exception.\n *\n * @method\n * @param {Error} ex\n */\nexport const exception = async ex => {\n    const pendingPromise = new Pending('core/notification:displayException');\n\n    // Fudge some parameters.\n    if (!ex.stack) {\n        ex.stack = '';\n    }\n\n    if (ex.debuginfo) {\n        ex.stack += ex.debuginfo + '\\n';\n    }\n\n    if (!ex.backtrace && ex.stacktrace) {\n        ex.backtrace = ex.stacktrace;\n    }\n\n    if (ex.backtrace) {\n        ex.stack += ex.backtrace;\n        const ln = ex.backtrace.match(/line ([^ ]*) of/);\n        const fn = ex.backtrace.match(/ of ([^:]*): /);\n        if (ln && ln[1]) {\n            ex.lineNumber = ln[1];\n        }\n        if (fn && fn[1]) {\n            ex.fileName = fn[1];\n            if (ex.fileName.length > 30) {\n                ex.fileName = '...' + ex.fileName.substr(ex.fileName.length - 27);\n            }\n        }\n    }\n\n    if (typeof ex.name === 'undefined' && ex.errorcode) {\n        ex.name = ex.errorcode;\n    }\n\n    const Y = await import('core/yui');\n    Y.use('moodle-core-notification-exception', function() {\n        var modal = new M.core.exception(ex);\n\n        modal.show();\n\n        pendingPromise.resolve();\n    });\n};\n\n/**\n * Initialise the page for the suppled context, and displaying the supplied notifications.\n *\n * @method\n * @param {Number} contextId\n * @param {Notification[]} notificationList\n */\nexport const init = (contextId, notificationList) => {\n    currentContextId = contextId;\n\n    // Setup the message target region if it isn't setup already\n    setupTargetRegion();\n\n    // Add provided notifications.\n    addNotifications(notificationList);\n};\n\n// To maintain backwards compatability we export default here.\nexport default {\n    init,\n    fetchNotifications,\n    addNotification,\n    alert,\n    confirm,\n    saveCancel,\n    exception,\n};\n"],"names":["_pending","_interopRequireDefault","_log","_ref","currentContextId","M","cfg","contextid","notificationTypes","success","info","warning","error","Selectors","notificationRegion","notificationRegionId","fallbackRegionParents","fetchNotifications","_asyncToGenerator","regeneratorRuntime","mark","_callee","Ajax","wrap","_context","prev","next","_systemImportTransformerGlobalIdentifier","define","amd","Promise","resolve","reject","require","module","exports","component","loader","sent","abrupt","call","methodname","args","then","addNotifications","stop","apply","this","arguments","notifications","length","pendingPromise","Pending","default","forEach","notification","renderNotification","template","variables","addNotification","_objectSpread","closebutton","announce","type","_ref2","_ref4","_callee2","Templates","_context2","message","debug","renderForPromise","_ref3","html","_ref3$js","js","prependNodeContents","getNotificationRegion","catch","exception","_x","_x2","document","querySelector","alert","title","cancelText","ModalFactory","_context3","create","types","ALERT","body","buttons","cancel","removeOnClose","modal","show","_callee3","_x3","_x4","_x5","confirm","question","saveLabel","noLabel","saveCallback","cancelCallback","saveCancel","_ref5","_callee4","_yield$Promise$all","_yield$Promise$all2","ModalEvents","_context4","all","_slicedToArray","SAVE_CANCEL","save","getRoot","on","_x6","_x7","_x8","_x9","_x10","_ref6","ex","ln","fn","_context5","stack","debuginfo","backtrace","stacktrace","match","lineNumber","fileName","substr","name","errorcode","use","core","_callee5","_x11","init","contextId","notificationList","newRegion","createElement","id","some","selector","targetRegion","prepend","setupTargetRegion","_default"],"mappings":"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"}
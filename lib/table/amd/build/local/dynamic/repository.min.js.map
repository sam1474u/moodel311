{"version":3,"file":"repository.min.js","sources":["../../../src/local/dynamic/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle calendar ajax actions.\n *\n * @module     core_calendar/repository\n * @copyright  2017 Simey Lameze <lameze@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {call as fetchMany} from 'core/ajax';\n\n/**\n * Fetch table view.\n *\n * @method fetch\n * @param {String} component The component\n * @param {String} handler The name of the handler\n * @param {String} uniqueid The unique id of the table\n * @param {Object} options The options to use when updating the table\n * @param {Array} options.sortData The list of columns to sort by\n * @param {Number} options.joinType The filterset join type\n * @param {Object} options.filters The filters to apply when searching\n * @param {String} options.firstinitial The first name initial to filter on\n * @param {String} options.lastinitial The last name initial to filter on\n * @param {String} options.pageNumber The page number\n * @param {Number} options.pageSize The page size\n * @param {Object} options.hiddenColumns The columns to hide\n * @param {Bool} resetPreferences\n * @return {Promise} Resolved with requested table view\n */\nexport const fetch = (component, handler, uniqueid, {\n    sortData = [],\n    joinType = null,\n    filters = {},\n    firstinitial = null,\n    lastinitial = null,\n    pageNumber = null,\n    pageSize = null,\n    hiddenColumns = {}\n} = {}, resetPreferences = false) => fetchMany([{\n    methodname: `core_table_get_dynamic_table_content`,\n    args: {\n        component,\n        handler,\n        uniqueid,\n        sortdata: sortData,\n        jointype: joinType,\n        filters,\n        firstinitial,\n        lastinitial,\n        pagenumber: pageNumber,\n        pagesize: pageSize,\n        hiddencolumns: hiddenColumns,\n        resetpreferences: resetPreferences\n    },\n}])[0];\n"],"names":["component","handler","uniqueid","_ref","arguments","length","undefined","_ref$sortData","sortData","_ref$joinType","joinType","_ref$filters","filters","_ref$firstinitial","firstinitial","_ref$lastinitial","lastinitial","_ref$pageNumber","pageNumber","_ref$pageSize","pageSize","_ref$hiddenColumns","hiddenColumns","resetPreferences","methodname","args","sortdata","jointype","pagenumber","pagesize","hiddencolumns","resetpreferences"],"mappings":"4LA2CqB,SAACA,UAAWC,QAASC,UAArB,IAAAC,KAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GASjB,CATiB,EAAAG,cAAAJ,KACjBK,SAAAA,gCAAW,GADMD,cAAAE,cAAAN,KAEjBO,SAAAA,gCAAW,KAFMD,cAAAE,aAAAR,KAGjBS,QAAAA,8BAAU,CAHO,EAAAD,aAAAE,kBAAAV,KAIjBW,aAAAA,wCAAe,KAJED,kBAAAE,iBAAAZ,KAKjBa,YAAAA,sCAAc,KALGD,iBAAAE,gBAAAd,KAMjBe,WAAAA,oCAAa,KANID,gBAAAE,cAAAhB,KAOjBiB,SAAAA,gCAAW,KAPMD,cAAAE,mBAAAlB,KAQjBmB,cAAAA,0CAAgB,CAAA,EARCD,mBASbE,yEATa,OASgB,cAAU,CAAC,CAC5CC,WAD4C,uCAE5CC,KAAM,CACFzB,UAAAA,UACAC,QAAAA,QACAC,SAAAA,SACAwB,SAAUlB,SACVmB,SAAUjB,SACVE,QAAAA,QACAE,aAAAA,aACAE,YAAAA,YACAY,WAAYV,WACZW,SAAUT,SACVU,cAAeR,cACfS,iBAAkBR,qBAEtB,EAzBiB"}
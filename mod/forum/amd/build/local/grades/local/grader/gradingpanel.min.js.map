{"version":3,"file":"gradingpanel.min.js","sources":["../../../../../src/local/grades/local/grader/gradingpanel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Grading panel functions.\n *\n * @module     mod_forum/local/grades/local/grader/gradingpanel\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Get the grade panel setter and getter for the current component.\n * This function dynamically pulls the relevant gradingpanel JS file defined in the grading method.\n * We do this because we do not know until execution time what the grading type is and we do not want to import unused files.\n *\n * @method\n * @param {String} component The component being graded\n * @param {Number} context The contextid of the thing being graded\n * @param {String} gradingComponent The thing providing the grading type\n * @param {String} gradingSubtype The subtype fo the grading component\n * @param {String} itemName The name of the thing being graded\n * @return {Object}\n */\nexport default async(component, context, gradingComponent, gradingSubtype, itemName) => {\n    let gradingMethodHandler = `${gradingComponent}/grades/grader/gradingpanel`;\n    if (gradingSubtype) {\n        gradingMethodHandler += `/${gradingSubtype}`;\n    }\n\n    const GradingMethod = await import(gradingMethodHandler);\n\n    return {\n        getter: (userId) => GradingMethod.fetchCurrentGrade(component, context, itemName, userId),\n        setter: (userId, notifyStudent, formData) => GradingMethod.storeCurrentGrade(\n            component, context, itemName, userId, notifyStudent, formData),\n    };\n};\n\n"],"names":["component","context","gradingComponent","gradingSubtype","itemName","gradingMethodHandler","GradingMethod","regeneratorRuntime","wrap","_context","prev","next","_systemImportTransformerGlobalIdentifier","define","amd","Promise","resolve","reject","require","sent","abrupt","getter","userId","fetchCurrentGrade","setter","notifyStudent","formData","storeCurrentGrade","stop","_callee"],"mappings":";;;;;;;;kDAoCe,SAAMA,QAAAA,UAAWC,QAASC,iBAAkBC,eAAgBC,UAA5D,IAAAC,qBAAAC,cAAA,OAAAC,mBAAAC,MAAA,SAAAC,UAAA,OAAA,OAAAA,SAAAC,KAAAD,SAAAE,MAAA,KAAA,EAAA,OACPN,+BAA0BH,iBADnB,+BAEPC,iBACAE,sBAA4BF,IAAAA,OAAAA,iBAHrBM,SAAAE,KAAA,EAAA,mBAAAC,yCAAAC,QAAAD,yCAAAC,OAAAC,IAAA,IAAAC,SAAA,SAAAC,QAAAC,QAAAL,yCAAAM,QAAA,CAMwBb,sBANxBW,QAAAC,OAMwBZ,IAAAA,oBAAAA,QAAAA,OAAAA,SAAAA,oBAAAA,SAAAA,oBAAAA,QAAAA,OAAAA,WAAAA,yCAAAA,SAAAA,cAAAA,yCAAAA,QAAAA,OAAAA,QAAAA,QAAAA,QAAAA,gFAAAA,uBANxB,KAAA,EAQJ,OAFDC,cANKG,SAAAU,KAQJV,SAAAW,OAAA,SAAA,CACHC,OAAQ,SAACC,QAAWhB,OAAAA,cAAciB,kBAAkBvB,UAAWC,QAASG,SAAUkB,OAD/E,EAEHE,OAAQ,SAACF,OAAQG,cAAeC,UAAxB,OAAqCpB,cAAcqB,kBACvD3B,UAAWC,QAASG,SAAUkB,OAAQG,cAAeC,SADjD,IAVD,KAAA,EAAA,IAAA,MAAA,OAAAjB,SAAAmB,OAAA,GAAAC"}
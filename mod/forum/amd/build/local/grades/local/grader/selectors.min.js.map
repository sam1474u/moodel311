{"version":3,"file":"selectors.min.js","sources":["../../../../../src/local/grades/local/grader/selectors.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Define all of the selectors we will be using on the grading interface.\n *\n * @module     mod_forum/local/grades/local/grader/selectors\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * A small helper function to build queryable data selectors.\n * @param {String} name\n * @param {String} value\n * @return {string}\n */\nconst getDataSelector = (name, value) => {\n    return `[data-${name}=\"${value}\"]`;\n};\n\nexport default {\n    buttons: {\n        toggleFullscreen: getDataSelector('action', 'togglefullscreen'),\n        closeGrader: getDataSelector('action', 'closegrader'),\n        collapseGradingDrawer: getDataSelector('action', 'collapse-grading-drawer'),\n        saveGrade: getDataSelector('action', 'savegrade'),\n        selectUser: getDataSelector('action', 'select-user'),\n        toggleSearch: getDataSelector('action', 'toggle-search')\n    },\n    regions: {\n        bodyContainer: getDataSelector('region', 'body-container'),\n        moduleContainer: getDataSelector('region', 'module_content_container'),\n        moduleReplace: getDataSelector('region', 'module_content'),\n        pickerRegion: getDataSelector('region', 'user_picker'),\n        gradingInfoContainer: getDataSelector('region', 'grading-info-container'),\n        gradingPanel: getDataSelector('region', 'grade'),\n        gradingPanelContainer: getDataSelector('region', 'grading-panel-container'),\n        gradingPanelErrors: getDataSelector('region', 'grade-errors'),\n        searchResultsContainer: getDataSelector('region', 'search-results-container'),\n        statusContainer: getDataSelector('region', 'status-container'),\n        userSearchContainer: getDataSelector('region', 'user-search-container'),\n        userSearchInput: getDataSelector('region', 'user-search-input')\n    },\n    values: {\n        sendStudentNotifications: '[data-region=\"notification\"] input[type=\"radio\"]:checked',\n    }\n};\n\n"],"names":["getDataSelector","name","value","_default","buttons","toggleFullscreen","closeGrader","collapseGradingDrawer","saveGrade","selectUser","toggleSearch","regions","bodyContainer","moduleContainer","moduleReplace","pickerRegion","gradingInfoContainer","gradingPanel","gradingPanelContainer","gradingPanelErrors","searchResultsContainer","statusContainer","userSearchContainer","userSearchInput","values","sendStudentNotifications"],"mappings":";;;;;;;;AA6BMA,IAAAA,gBAAkB,SAACC,KAAMC,OACXD,MAAAA,SAAAA,OAAAA,kBAASC,MAAzB,KACH,EAEcC,SAAA,CACXC,QAAS,CACLC,iBAAkBL,gBAAgB,SAAU,oBAC5CM,YAAaN,gBAAgB,SAAU,eACvCO,sBAAuBP,gBAAgB,SAAU,2BACjDQ,UAAWR,gBAAgB,SAAU,aACrCS,WAAYT,gBAAgB,SAAU,eACtCU,aAAcV,gBAAgB,SAAU,kBAE5CW,QAAS,CACLC,cAAeZ,gBAAgB,SAAU,kBACzCa,gBAAiBb,gBAAgB,SAAU,4BAC3Cc,cAAed,gBAAgB,SAAU,kBACzCe,aAAcf,gBAAgB,SAAU,eACxCgB,qBAAsBhB,gBAAgB,SAAU,0BAChDiB,aAAcjB,gBAAgB,SAAU,SACxCkB,sBAAuBlB,gBAAgB,SAAU,2BACjDmB,mBAAoBnB,gBAAgB,SAAU,gBAC9CoB,uBAAwBpB,gBAAgB,SAAU,4BAClDqB,gBAAiBrB,gBAAgB,SAAU,oBAC3CsB,oBAAqBtB,gBAAgB,SAAU,yBAC/CuB,gBAAiBvB,gBAAgB,SAAU,sBAE/CwB,OAAQ,CACJC,yBAA0B"}
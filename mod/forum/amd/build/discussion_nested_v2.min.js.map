{"version":3,"file":"discussion_nested_v2.min.js","sources":["../src/discussion_nested_v2.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for viewing a discussion in nested v2 view.\n *\n * @module mod_Forum/discussion_nested_v2\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport AutoRows from 'core/auto_rows';\nimport CustomEvents from 'core/custom_interaction_events';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Discussion from 'mod_forum/discussion';\nimport InPageReply from 'mod_forum/inpage_reply';\nimport LockToggle from 'mod_forum/lock_toggle';\nimport FavouriteToggle from 'mod_forum/favourite_toggle';\nimport Pin from 'mod_forum/pin_toggle';\nimport Selectors from 'mod_forum/selectors';\nimport Subscribe from 'mod_forum/subscription_toggle';\n\nconst ANIMATION_DURATION = 150;\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getPostContainer = (element) => {\n    return element.closest(Selectors.post.post);\n};\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @param {Number} id Id of the post to find.\n * @return {Object} jQuery element\n */\nconst getPostContainerById = (element, id) => {\n    return element.find(`${Selectors.post.post}[data-post-id=${id}]`);\n};\n\n/**\n * Get the parent post container elements from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getParentPostContainers = (element) => {\n    return element.parents(Selectors.post.post);\n};\n\n/**\n * Get the post content container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getPostContentContainer = (postContainer) => {\n    return postContainer.children().not(Selectors.post.repliesContainer).find(Selectors.post.forumCoreContent);\n};\n\n/**\n * Get the in page reply container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyContainer = (postContainer) => {\n    return postContainer.children().filter(Selectors.post.inpageReplyContainer);\n};\n\n/**\n * Get the in page reply form element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyForm = (postContainer) => {\n    return getInPageReplyContainer(postContainer).find(Selectors.post.inpageReplyContent);\n};\n\n/**\n * Get the in page reply create (reply) button element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyCreateButton = (postContainer) => {\n    return getPostContentContainer(postContainer).find(Selectors.post.inpageReplyCreateButton);\n};\n\n/**\n * Get the replies visibility toggle container (show/hide replies button container) element\n * from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesVisibilityToggleContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesVisibilityToggleContainer);\n};\n\n/**\n * Get the replies container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesContainer);\n};\n\n/**\n * Check if the post has any replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst hasReplies = (postContainer) => {\n    return getRepliesContainer(postContainer).children().length > 0;\n};\n\n/**\n * Get the show replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getShowRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.showReplies);\n};\n\n/**\n * Get the hide replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getHideRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.hideReplies);\n};\n\n/**\n * Check if the replies are visible.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst repliesVisible = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    return repliesContainer.is(':visible');\n};\n\n/**\n * Show the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst showReplies = (postContainer, postIdToSee = null) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.addClass('hidden');\n    hideButton.removeClass('hidden');\n\n    repliesContainer.slideDown({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            if (postIdToSee) {\n                const postContainerToSee = getPostContainerById(repliesContainer, postIdToSee);\n                if (postContainerToSee.length) {\n                    postContainerToSee[0].scrollIntoView();\n                }\n            }\n        }\n    }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n};\n\n/**\n * Hide the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst hideReplies = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.removeClass('hidden');\n    hideButton.addClass('hidden');\n\n    repliesContainer.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false\n    }).fadeOut(ANIMATION_DURATION);\n};\n\n/** Variable to hold the showInPageReplyForm function after it's built. */\nlet showInPageReplyForm = null;\n\n/**\n * Build the showInPageReplyForm function with the given additional template context.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template.\n * @return {Function}\n */\nconst buildShowInPageReplyFormFunction = (additionalTemplateContext) => {\n    /**\n     * Show the in page reply form in the given in page reply container. The form\n     * display will be animated.\n     *\n     * @param {Object} postContainer jQuery element for the post container\n     */\n    return async(postContainer) => {\n\n        const inPageReplyContainer = getInPageReplyContainer(postContainer);\n        const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n        const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n\n        if (!hasInPageReplyForm(inPageReplyContainer)) {\n            try {\n                const html = await renderInPageReplyTemplate(additionalTemplateContext, inPageReplyCreateButton, postContainer);\n                Templates.appendNodeContents(inPageReplyContainer, html, '');\n            } catch (e) {\n                Notification.exception(e);\n            }\n\n            // Load formchangechecker module.\n            import('core/yui')\n                .then(Y => {\n                    return new Promise(resolve => {\n                        Y.use('moodle-core-formchangechecker', Y => {\n                            resolve(Y);\n                        });\n                    });\n                })\n                .then(Y => {\n                    M.core_formchangechecker.init({formid: Y.one(postContainer[0].querySelector('form')).generateID()});\n                    return Y;\n                })\n                .catch();\n        }\n\n        inPageReplyCreateButton.fadeOut(ANIMATION_DURATION, () => {\n            const inPageReplyForm = getInPageReplyForm(postContainer);\n            inPageReplyForm.slideDown({\n                duration: ANIMATION_DURATION,\n                queue: false,\n                complete: () => {\n                    inPageReplyForm.find('textarea').focus();\n                }\n            }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n\n            if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n                repliesVisibilityToggleContainer.fadeIn(ANIMATION_DURATION);\n                hideReplies(postContainer);\n            }\n        });\n    };\n};\n\n/**\n * Hide the in page reply form in the given in page reply container. The form\n * display will be animated.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst hideInPageReplyForm = (postContainer, postIdToSee = null) => {\n    const inPageReplyForm = getInPageReplyForm(postContainer);\n    const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n    const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n\n    if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n        repliesVisibilityToggleContainer.fadeOut(ANIMATION_DURATION);\n        if (!repliesVisible(postContainer)) {\n            showReplies(postContainer, postIdToSee);\n        }\n    }\n\n    inPageReplyForm.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            inPageReplyCreateButton.fadeIn(ANIMATION_DURATION);\n        }\n    }).fadeOut(200);\n};\n\n/**\n * Check if the in page reply container contains the in page reply form.\n *\n * @param {Object} inPageReplyContainer jQuery element for the in page reply container\n * @return {Bool}\n */\nconst hasInPageReplyForm = (inPageReplyContainer) => {\n    return inPageReplyContainer.find(Selectors.post.inpageReplyContent).length > 0;\n};\n\n/**\n * Render the template to generate the in page reply form HTML.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template\n * @param {Object} button jQuery element for the reply button that was clicked\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery promise\n */\nconst renderInPageReplyTemplate = (additionalTemplateContext, button, postContainer) => {\n    const postContentContainer = getPostContentContainer(postContainer);\n    const currentSubject = postContentContainer.find(Selectors.post.forumSubject).text();\n    const currentAuthorName = postContentContainer.find(Selectors.post.authorName).text();\n    const context = {\n        postid: postContainer.data('post-id'),\n        \"reply_url\": button.attr('data-href'),\n        sesskey: M.cfg.sesskey,\n        parentsubject: currentSubject,\n        parentauthorname: currentAuthorName,\n        canreplyprivately: button.data('can-reply-privately'),\n        postformat: InPageReply.CONTENT_FORMATS.MOODLE,\n        ...additionalTemplateContext\n    };\n\n    return Templates.render('mod_forum/inpage_reply_v2', context);\n};\n\n/**\n * Increment the total reply count in the show/hide replies buttons for the post.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst incrementTotalReplyCount = (postContainer) => {\n    getRepliesVisibilityToggleContainer(postContainer).find(Selectors.post.replyCount).each((index, element) => {\n        const currentCount = parseInt(element.innerText, 10);\n        element.innerText = currentCount + 1;\n    });\n};\n\n/**\n * Create all of the event listeners for the discussion.\n *\n * @param {Object} root jQuery element for the discussion container\n */\nconst registerEventListeners = (root) => {\n    CustomEvents.define(root, [CustomEvents.events.activate]);\n    // Auto expanding text area for in page reply.\n    AutoRows.init(root);\n\n    // Reply button is clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCreateButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        showInPageReplyForm(postContainer);\n    });\n\n    // Cancel in page reply button.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCancelButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        hideInPageReplyForm(postContainer);\n    });\n\n    // Show replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.showReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        showReplies(postContainer);\n    });\n\n    // Hide replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.hideReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        hideReplies(postContainer);\n    });\n\n    // Post created with in page reply.\n    root.on(InPageReply.EVENTS.POST_CREATED, Selectors.post.inpageSubmitBtn, (e, newPostId) => {\n        const currentTarget = $(e.currentTarget);\n        const postContainer = getPostContainer(currentTarget);\n        const postContainers = getParentPostContainers(currentTarget);\n        hideInPageReplyForm(postContainer, newPostId);\n\n        postContainers.each((index, container) => {\n            incrementTotalReplyCount($(container));\n        });\n    });\n};\n\n/**\n * Initialise the javascript for the discussion in nested v2 display mode.\n *\n * @param {Object} root jQuery element for the discussion container\n * @param {Object} context Additional render context for the in page reply template\n */\nexport const init = (root, context) => {\n    // Build the showInPageReplyForm function with the additional render context.\n    showInPageReplyForm = buildShowInPageReplyFormFunction(context);\n    // Add discussion event listeners.\n    registerEventListeners(root);\n    // Initialise default discussion javascript (keyboard nav etc).\n    Discussion.init(root);\n    // Add in page reply javascript.\n    InPageReply.init(root);\n\n    // Initialise the settings menu javascript.\n    const discussionToolsContainer = root.find(Selectors.discussion.tools);\n    LockToggle.init(discussionToolsContainer, false);\n    FavouriteToggle.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.favourited ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Pin.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.pinned ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Subscribe.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.subscribed ? 0 : 1;\n        toggleElement.data('targetstate', newTargetState);\n    });\n};\n"],"names":["_jquery","_interopRequireDefault","_auto_rows","_custom_interaction_events","_notification","_templates","_discussion","_inpage_reply","_lock_toggle","_favourite_toggle","_pin_toggle","_selectors","_subscription_toggle","ANIMATION_DURATION","getPostContainer","element","closest","Selectors","post","getPostContainerById","id","find","getPostContentContainer","postContainer","children","not","repliesContainer","forumCoreContent","getInPageReplyContainer","filter","inpageReplyContainer","getInPageReplyForm","inpageReplyContent","getInPageReplyCreateButton","inpageReplyCreateButton","getRepliesVisibilityToggleContainer","repliesVisibilityToggleContainer","getRepliesContainer","hasReplies","length","getShowRepliesButton","replyVisibilityToggleContainer","showReplies","getHideRepliesButton","hideReplies","repliesVisible","is","postIdToSee","showButton","hideButton","addClass","removeClass","slideDown","duration","queue","complete","postContainerToSee","scrollIntoView","css","fadeIn","slideUp","fadeOut","showInPageReplyForm","buildShowInPageReplyFormFunction","additionalTemplateContext","regeneratorRuntime","mark","inPageReplyContainer","inPageReplyCreateButton","html","wrap","_context","prev","next","hasInPageReplyForm","renderInPageReplyTemplate","sent","Templates","appendNodeContents","t0","Notification","exception","_systemImportTransformerGlobalIdentifier","define","amd","Promise","resolve","reject","require","module","exports","component","loader","then","Y","use","M","core_formchangechecker","init","formid","one","querySelector","generateID","catch","inPageReplyForm","focus","stop","_callee","_ref","_x","apply","this","arguments","hideInPageReplyForm","button","postContentContainer","currentSubject","forumSubject","text","currentAuthorName","authorName","context","_objectSpread","postid","data","reply_url","attr","sesskey","cfg","parentsubject","parentauthorname","canreplyprivately","postformat","InPageReply","CONTENT_FORMATS","MOODLE","render","registerEventListeners","root","CustomEvents","events","activate","on","e","originalEvent","preventDefault","currentTarget","inpageReplyCancelButton","target","EVENTS","POST_CREATED","inpageSubmitBtn","newPostId","default","postContainers","parents","each","index","container","replyCount","currentCount","parseInt","innerText","incrementTotalReplyCount","discussionToolsContainer","discussion","tools","LockToggle","toggleElement","response","newTargetState","userstate","favourited","pinned","subscribed"],"mappings":"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"}